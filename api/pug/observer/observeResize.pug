section.section
  header.section__header
    h3.section__h3 observeResize(el, fn)
  div.section__content
    h4.section__h4 Since
    p.section__dd 1.8.0
    dl.section__dl
      dt.section__dt Category：
      dd.section__dd Observer
    p observeMutations() 方法是一个通用的 ResizeObserver 观察者处理器。
    h4.section__h4 Parameters
    h5.section__h4 el
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd HTMLElement
    p （必须）el 参数指定需要观察的 DOM 元素。
    h5.section__h4 fn
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Function
    p （必须）fn 参数指定 DOM 元素观察的属性发生改变时出发的回调函数。
    h5.section__h4 Returns
    dl.section__dl
      dt.section__dt Type：
      dd.section__dd Object
    p 返回 ResizeObserver 对象（实例）。
    pre.section__pre
      code.section__.
        &lt;ul id="list" class="list"&gt;
            &lt;li id="home" class="item active"&gt;Home&lt;/li&gt;
            &lt;li class="item blog"&gt;Blog&lt;/li&gt;
            &lt;li class="item project"&gt;Projects&lt;/li&gt;
            &lt;li class="item"&gt;About&lt;/li&gt;
        &lt;/ul&gt;

        // 引入 DOM 模块（中的所有工具方法）
        import DOM from '@yaohaixiao/dom.js/dom
        // 引用 observeResize 单个方法
        import observeResize from '@yaohaixiao/dom.js/observeResize'

        const $list = DOM.getEl('#list')
        const $blog = DOM.getEl('.blog')

        // entry 代表 DOM 元素改变时记录的 ResizeObserverEntry 对象
        DOM.observeMutations($list, (entry) => {
          console.log('list 发生 resize：' entry)
        })
        DOM.observeMutations($blog, (entry) => {
          console.log('blog 发生resize：' entry)
        })

        DOM.css($blog, {
          width: '200px'
        })
        // -> blog 发生改变：blog 改变记录的 ResizeObserverEntry 对象

        DOM.css($list, {
          width: '200px'
        })
        // -> list 发生改变：list 改变记录的 ResizeObserverEntry 对象
