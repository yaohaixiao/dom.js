{"version":3,"file":"dom.min.js","sources":["utils/toString.js","utils/isFunction.js","utils/isObject.js","utils/isElement.js","hasClass.js","addClass.js","utils/isString.js","utils/hasOwn.js","utils/trim.js","utils/tags.js","utils/isHTML.js","getNextSibling.js","insertAfter.js","insertHTMLAfter.js","setAttribute.js","setAttributes.js","getAttribute.js","insertBefore.js","insertHTMLBefore.js","getPreviousSibling.js","getPreviousSiblings.js","getNextSiblings.js","getSiblings.js","siblings.js","matches.js","getParentOrHost.js","utils/isArray.js","utils/isDOM.js","utils/isHTMLCollection.js","utils/isFragment.js","utils/isTextNode.js","createElement.js","getViewportHeight.js","getDocumentScrollLeft.js","getDocumentScrollTop.js","getViewportWidth.js","isMatched.js","getOffsetLeft.js","getOffsetTop.js","getPageY.js","getPageX.js","utils/toCamel.js","getStyle.js","getScrollParent.js","getScrollX.js","getScrollTotalX.js","getScrolly.js","getScrollTotalY.js","getScrollY.js","isAncestor.js","removeClass.js","utils/easeInQuad.js","setStyle.js","dom.js","addStyles.js","utils/extend.js","after.js","attr.js","before.js","byId.js","children.js","closest.js","getDocumentHeight.js","getDocumentWidth.js","getNextSiblingBy.js","getOffset.js","getPageXY.js","getPreviousSiblingBy.js","getScrollTotalXY.js","getScrollXY.js","has.js","html.js","index.js","next.js","nextAll.js","prev.js","prevAll.js","replaceClass.js","scrollTo.js","setProperty.js","toggle.js","toggleClass.js"],"sourcesContent":["/**\n * Object 对象原型上的 toString 方法\n * ========================================================================\n * @method toString\n * @param {*} val\n * @returns {string}\n */\nconst toString = (val) => {\n  return Object.prototype.toString.apply(val)\n}\n\nexport default toString\n","import toString from './toString'\n\n/**\n * 检测测试数据是否为 Function 类型\n * ========================================================================\n * @method isFunction\n * @param {*} val - （必须）待检测的数据\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\n */\nconst isFunction = (val) => {\n  return typeof val === 'function' || toString(val) === '[object Function]'\n}\n\nexport default isFunction\n","import toString from './toString'\nimport isFunction from './isFunction'\n\n/**\n * 检测数据是否为 Object 类型\n * ========================================================================\n * @method isObject\n * @param {*} o\n * @returns {boolean}\n */\nconst isObject = (o) => {\n  return (\n    (toString(o) === '[object Object]' ||\n      typeof o === 'object' ||\n      isFunction(o)) &&\n    o !== null\n  )\n}\n\nexport default isObject\n","import isObject from './isObject'\n\n/**\n * 检测数据是否为 HTMLElement DOM 节点\n * ========================================================================\n * @method isElement\n * @param {*} o\n * @returns {boolean}\n */\nconst isElement = (o) => {\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\n}\n\nexport default isElement\n","import isElement from './utils/isElement'\n\n/**\n * 检测 DOM 节点是否包含名为 className 的样式\n * ========================================================================\n * @method hasClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst hasClass = (el, className) => {\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\n  let allClass\n  let classList\n\n  if (!isElement(el)) {\n    return false\n  }\n\n  allClass = el.className\n\n  if (!allClass) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.contains) {\n    return el.classList.contains(className)\n  }\n\n  return !!pattern.exec(allClass)\n}\n\nexport default hasClass\n","import isElement from './utils/isElement'\nimport hasClass from './hasClass'\n\n/**\n * 给 DOM 节点添加名为 className 的样式\n * ========================================================================\n * @method addClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst addClass = (el, className) => {\n  let classList\n  let allClass\n\n  if (!isElement(el) || hasClass(el, className)) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.add) {\n    classList.add(className)\n  } else {\n    allClass = el.className\n    allClass += allClass.length > 0 ? ' ' + className : className\n    el.className = allClass\n  }\n}\n\nexport default addClass\n","/**\n * 检测数据是否为 String 类型\n * ========================================================================\n * @method isArray\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return typeof str === 'string'\n}\n\nexport default isString\n","/**\n * 检测对象自身属性中是否具有指定的属性。\n * ========================================================================\n * @method hasOwn\n * @param {Object} obj - （必须）检测的目标对象\n * @param {String} prop - （必须）属性名\n * @returns {Boolean}\n */\nconst hasOwn = (obj, prop) => {\n  const hasOwnProperty = Object.prototype.hasOwnProperty\n  return obj && hasOwnProperty.call(obj, prop)\n}\n\nexport default hasOwn\n","import isString from './isString'\n\n/**\n * 清楚字符串起始位置所有的空格\n * ========================================================================\n * @method trim\n * @param {string} str\n * @returns {string|Boolean}\n */\nconst trim = (str) => {\n  if (!isString(str)) {\n    return false\n  }\n  return str.replace(/(^\\s+)|(\\s+$)/g, '')\n}\n\nexport default trim\n","// HTML 合法的标签\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'math',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rb',\n  'rp',\n  'rt',\n  'rtc',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'search',\n  'section',\n  'select',\n  'slot',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'svg',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr'\n]\n\nexport default TAGS\n","import isString from './isString'\nimport trim from './trim'\nimport TAGS from './tags'\n\n/**\n * 检测测试数据是否为合法的 HTML 代码\n * ========================================================================\n * @method isHTML\n * @category Lang\n * @see https://github.com/sindresorhus/html-tags\n * @see https://github.com/sindresorhus/is-html\n * @param {String} str - 要检测的数据\n * @returns {Boolean} 'val' 为合法的 HTML 代码，返回 true，否则返回 false\n */\nconst isHTML = (str) => {\n  let html\n  let basic\n  let full\n\n  if (!isString(str)) {\n    return false\n  }\n\n  // 为了提高性能，我们将其限制在合理的长度内。\n  html = trim(str).slice(0, 1000)\n  basic = /\\s*<!doctype html>|<html\\b[^>]*>|<body\\b[^>]*>|<x-[^>]+>/i\n  full = new RegExp(TAGS.map((tag) => `<${tag}\\\\b[^>]*>`).join('|'), 'i')\n\n  return basic.test(html) || full.test(html)\n}\n\nexport default isHTML\n","import isElement from './utils/isElement'\r\n\r\nconst getNextSibling = (el) => {\r\n  return isElement(el) ? el.nextElementSibling : null\r\n}\r\n\r\nexport default getNextSibling\r\n","import isElement from './utils/isElement'\r\nimport getNextSibling from './getNextSibling'\r\n\r\nconst insertAfter = (el, reference) => {\r\n  const $parent = reference.parentNode\r\n  let $nextSibling\r\n\r\n  if (!el || !isElement(el)|| !reference || !isElement(reference) || !$parent) {\r\n    return null\r\n  }\r\n\r\n  $nextSibling = getNextSibling(reference)\r\n\r\n  if ($nextSibling) {\r\n    return $parent.insertBefore(el, $nextSibling)\r\n  } else {\r\n    return $parent.appendChild(el)\r\n  }\r\n}\r\n\r\nexport default insertAfter\r\n","import isElement from './utils/isElement'\r\n\r\n/**\r\n * 在指定元素的末尾插入HTML字符串。\r\n * ========================================================================\r\n * @param {HTMLElement|String} el\r\n * @param {String} html\r\n *\r\n * @example\r\n * insertAfter(document.getElementById('myId'), '<p>after</p>');\r\n * // <div id=\"myId\">...</div> <p>after</p>\r\n */\r\nconst insertHTMLAfter = (el, html) => {\r\n  let $el\r\n\r\n  if(!el || !html) {\r\n    return false\r\n  }\r\n\r\n  $el = isElement(el) ? el : document.querySelector(el)\r\n\r\n  if (!$el) {\r\n    return false\r\n  }\r\n\r\n  $el.insertAdjacentHTML('afterend', html);\r\n}\r\n\r\nexport default insertHTMLAfter\r\n","import isElement from './utils/isElement'\n\n/**\n * 给 DOM 节点设置属性/值\n * ========================================================================\n * @method setAttribute\n * @param {HTMLElement} el - DOM 节点\n * @param {String} attr - 属性名称\n * @param {String|Number|Boolean} value - 属性值\n */\nconst setAttribute = (el, attr, value) => {\n  let tagName = el.tagName.toLowerCase()\n\n  if (!isElement(el)) {\n    return false\n  }\n\n  tagName = el.tagName.toLowerCase()\n\n  switch (attr) {\n    case 'style':\n      el.style.cssText = value\n      break\n    case 'value':\n      if (tagName === 'input' || tagName === 'textarea') {\n        el.value = value\n      } else {\n        el.setAttribute(attr, value)\n      }\n      break\n    case 'className':\n      el.className = value\n      break\n    case 'innerHTML':\n      el.innerHTML = value\n      break\n    case 'innerText':\n      el.innerText = value\n      break\n    default:\n      el.setAttribute(attr, value)\n      break\n  }\n}\n\nexport default setAttribute\n","import isObject from './utils/isObject'\nimport hasOwn from './utils/hasOwn'\nimport setAttribute from './setAttribute'\n\nconst setAttributes = (el, attrs) => {\n  if (!el || !isObject(attrs)) {\n    return false\n  }\n\n  Object.keys(attrs).forEach((attr) => {\n    const value = attrs[attr]\n\n    if (hasOwn(attrs, attr)) {\n      setAttribute(el, attr, value)\n    }\n  })\n}\n\nexport default setAttributes\n","import isElement from './utils/isElement'\r\n\r\nconst getAttribute = (el, attr) => {\r\n  let tagName\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'style':\r\n      return el.style.cssText\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        return el.value\r\n      } else {\r\n        return el.setAttribute(attr)\r\n      }\r\n    case 'className':\r\n      return el.getAttribute('class')\r\n    case 'htmlFor':\r\n      return el.getAttribute('for')\r\n    case 'innerHTML':\r\n      return el.innerHTML\r\n    case 'innerText':\r\n      return el.innerText\r\n    default:\r\n      return el.setAttribute(attr)\r\n  }\r\n}\r\n\r\nexport default getAttribute\r\n","import isElement from './utils/isElement'\r\n\r\nconst insertBefore = (el, reference) => {\r\n  const $parent = reference.parentNode\r\n\r\n  if (!el || !isElement(el)|| !reference || !isElement(reference) || !$parent) {\r\n    return null\r\n  }\r\n\r\n  return $parent.insertBefore(el, reference)\r\n}\r\n\r\nexport default insertBefore\r\n","import isElement from './utils/isElement'\r\n\r\n/**\r\n * 在指定元素的开头插入HTML字符串。\r\n * ========================================================================\r\n * @param {HTMLElement|String} el\r\n * @param {String} html\r\n *\r\n * @example\r\n * insertHTMLBefore(document.getElementById('myId'), '<p>before</p>');\r\n * // <p>before</p> <div id=\"myId\">...</div>\r\n */\r\nconst insertHTMLBefore = (el, html) => {\r\n  let $el\r\n\r\n  if (!el || !html) {\r\n    return false\r\n  }\r\n\r\n  $el = isElement(el) ? el : document.querySelector(el)\r\n\r\n  if (!$el) {\r\n    return false\r\n  }\r\n\r\n  $el.insertAdjacentHTML('beforebegin', html);\r\n}\r\n\r\nexport default insertHTMLBefore\r\n","import isElement from './utils/isElement'\r\n\r\nconst getPreviousSibling = (el) => {\r\n  return isElement(el) ? el.previousElementSibling : null\r\n}\r\n\r\nexport default getPreviousSibling\r\n","import isElement from './utils/isElement'\r\nimport getPreviousSibling from './getPreviousSibling'\r\n\r\nconst getPreviousSiblings = (el) => {\r\n  const prev = []\r\n  let $sibling\r\n\r\n  if (!isElement(el)) {\r\n    return prev\r\n  }\r\n\r\n  $sibling = getPreviousSibling(el)\r\n  prev.push($sibling)\r\n\r\n  while ($sibling) {\r\n    $sibling = getPreviousSibling($sibling)\r\n    prev.push($sibling)\r\n  }\r\n\r\n  return prev\r\n}\r\n\r\nexport default getPreviousSiblings\r\n","import isElement from './utils/isElement'\r\nimport getNextSibling from './getNextSibling'\r\n\r\nconst getNextSiblings = (el) => {\r\n  const next = []\r\n  let $sibling\r\n\r\n  if (!isElement(el)) {\r\n    return next\r\n  }\r\n\r\n  $sibling = getNextSibling(el)\r\n  next.push($sibling)\r\n\r\n  while ($sibling) {\r\n    $sibling = getNextSibling($sibling)\r\n    next.push($sibling)\r\n  }\r\n\r\n  return next\r\n}\r\n\r\nexport default getNextSiblings\r\n","import getPreviousSiblings from './getPreviousSiblings'\r\nimport getNextSiblings from './getNextSiblings'\r\nimport isElement from './utils/isElement'\r\n\r\nconst getSiblings = (el, includeSelf = false) => {\r\n  let list = []\r\n  let prev = []\r\n  let next = []\r\n\r\n  if (!isElement(el)) {\r\n    return list\r\n  }\r\n\r\n  prev = getPreviousSiblings(el)\r\n  list.push(...prev)\r\n\r\n  if (includeSelf) {\r\n    list.push(el)\r\n  }\r\n  \r\n  next = getNextSiblings(el)\r\n  list.push(...next)\r\n\r\n  return list\r\n}\r\n\r\nexport default getSiblings\r\n","import getSiblings from './getSiblings'\r\n\r\nconst siblings = (el, includeSelf = false) => {\r\n  return getSiblings(el, includeSelf)\r\n}\r\n\r\nexport default siblings\r\n","/**\n * 获取 el 节点下匹配 selector 选择器的 DOM 节点\n * ========================================================================\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\n * 标 DOM 元素是否为事件代理所期望触发的目标。\n * ========================================================================\n * @method matches\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\n * @returns {Boolean}\n */\nconst matches = (el, selector = '') => {\n  const sel = selector.replace(/^>/i, '')\n\n  if (!selector || !sel || !el) {\n    return false\n  }\n\n  /* istanbul ignore else */\n  if (el.matches) {\n    return el.matches(sel)\n  } else if (el.msMatchesSelector) {\n    return el.msMatchesSelector(sel)\n  } else {\n    return false\n  }\n}\n\nexport default matches\n","/**\n * 获取 DOM 元素的父节点\n * ========================================================================\n * @method getParentOrHost\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\n * @returns {*|HTMLElement}\n */\nconst getParentOrHost = (el) => {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode\n}\n\nexport default getParentOrHost\n","import toString from './toString'\n\n/**\n * 检测数据是否为 Array 类型\n * ========================================================================\n * @method isArray\n * @param {*} o\n * @returns {boolean}\n */\nconst isArray = (o) => {\n  if (Array.isArray) {\n    return Array.isArray(o)\n  } else {\n    return toString(o) === '[object Array]'\n  }\n}\n\nexport default isArray\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import toString from './toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return !!(isObject(el) && toString(el) === '[object NodeList]')\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from './toString'\nimport isObject from './isObject'\n\nconst isFragment = (fragment) => {\n  return !!(\n    isObject(fragment) && toString(fragment) === '[object DocumentFragment]'\n  )\n}\n\nexport default isFragment\n","import toString from './toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (toString(el) === '[object Text]' || (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","import isObject from './utils/isObject'\nimport isString from './utils/isString'\nimport isArray from './utils/isArray'\nimport isDOM from './utils/isDOM'\nimport setAttributes from './setAttributes'\n\n/**\n * 创建 DOM 节点，并添加属性和子节点\n * ========================================================================\n * @method createElement\n * @param {String} tagName - 标签名称\n * @param {Object|Array|HTMLElement|DocumentFragment|String} attrs - 属性对象或者子节点\n * @param {Array|HTMLElement|DocumentFragment|String} [children] - 子节点数组\n * @returns {HTMLElement}\n */\nconst createElement = (tagName, attrs, children) => {\n  const $fragment = document.createDocumentFragment()\n  const $el = document.createElement(tagName)\n  const isValidChild = (child) => {\n    return isDOM(child) || isString(child)\n  }\n  const append = (child) => {\n    let $child\n\n    if (!isValidChild(child)) {\n      return false\n    }\n\n    if (isDOM(child)) {\n      $child = child\n    } else if (isString(child)) {\n      $child = document.createTextNode(child)\n    }\n\n    $fragment.appendChild($child)\n  }\n\n  if (isObject(attrs)) {\n    setAttributes($el, attrs)\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\n    attrs.forEach((child) => {\n      append(child)\n    })\n  } else if (isDOM(attrs)) {\n    append(attrs)\n  } else if (isString(attrs)) {\n    append(document.createTextNode(attrs))\n  }\n\n  if (isArray(children)) {\n    children.forEach((child) => {\n      append(child)\n    })\n  } else {\n    append(children)\n  }\n\n  $el.appendChild($fragment)\n\n  return $el\n}\n\nexport default createElement\n","const getViewportHeight = () => {\r\n  return Math.max(document.documentElement.clientHeight, window.innerHeight)\r\n}\r\n\r\nexport default getViewportHeight\r\n","const getDocumentScrollLeft = (doc) => {\r\n  const $document = doc || document\r\n  return Math.max(\r\n    $document.documentElement.scrollLeft,\r\n    $document.body.scrollLeft\r\n  )\r\n}\r\n\r\nexport default getDocumentScrollLeft\r\n","const getDocumentScrollTop = (doc) => {\r\n  const $document = doc || document\r\n  return Math.max($document.documentElement.scrollTop, $document.body.scrollTop)\r\n}\r\n\r\nexport default getDocumentScrollTop\r\n","const getViewportWidth = () => {\r\n  return Math.max(document.documentElement.clientWidth, window.innerWidth)\r\n}\r\n\r\nexport default getViewportWidth\r\n","import isElement from './utils/isElement'\r\nimport isFunction from './utils/isFunction'\r\nimport isString from './utils/isString'\r\nimport matches from './matches'\r\n\r\nconst isMatched = (el, match) => {\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (isFunction(match)) {\r\n    return match(el)\r\n  } else if (isString(match)) {\r\n    return matches(el, match)\r\n  }\r\n}\r\n\r\nexport default isMatched\r\n","/**\n * 获取 DOM 节点相对于窗口的 left（横坐标）值\n * ========================================================================\n * @method getOffsetLeft\n * @param {HTMLElement} el - DOM 节点\n * @returns {Number}\n */\nconst getOffsetLeft = (el) => {\n  let left = el.offsetLeft\n\n  if (el.offsetParent !== null) {\n    left += getOffsetLeft(el.offsetParent)\n  }\n\n  return left\n}\n\nexport default getOffsetLeft\n","/**\n * 获取 DOM 节点相对于窗口的 left （纵坐标）值\n * ========================================================================\n * @method getOffsetTop\n * @param {HTMLElement} el - DOM 节点\n * @returns {Number}\n */\nconst getOffsetTop = (el) => {\n  let top = el.offsetTop\n\n  if (el.offsetParent !== null) {\n    top += getOffsetTop(el.offsetParent)\n  }\n\n  return top\n}\n\nexport default getOffsetTop\n","import isElement from './utils/isElement'\r\nimport getDocumentScrollTop from './getDocumentScrollTop'\r\n\r\nconst getPageY = (el) => {\r\n  const floor = Math.floor\r\n  let scrollTop\r\n  let box\r\n  let doc\r\n  let pageY\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  box = el.getBoundingClientRect()\r\n  doc = el.ownerDocument\r\n  scrollTop = getDocumentScrollTop(doc)\r\n\r\n  pageY = floor(box.left)\r\n\r\n  if (scrollTop) {\r\n    pageY += scrollTop\r\n  }\r\n\r\n  return pageY\r\n}\r\n\r\nexport default getPageY\r\n","import isElement from './utils/isElement'\r\nimport getDocumentScrollLeft from './getDocumentScrollLeft'\r\n\r\nconst getPageX = (el) => {\r\n  const floor = Math.floor\r\n  let scrollLeft\r\n  let box\r\n  let doc\r\n  let pageX\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  box = el.getBoundingClientRect()\r\n  doc = el.ownerDocument\r\n  scrollLeft = getDocumentScrollLeft(doc)\r\n\r\n  pageX = floor(box.left)\r\n\r\n  if (scrollLeft) {\r\n    pageX += scrollLeft\r\n  }\r\n\r\n  return pageX\r\n}\r\n\r\nexport default getPageX\r\n","const toCamel = (prop) => {\r\n  const props = {}\r\n\r\n  function toUpper(x, l) {\r\n    return l.toUpperCase()\r\n  }\r\n\r\n  return (\r\n    props[prop] ||\r\n    (props[prop] =\r\n      prop.indexOf('-') === -1 ? prop : prop.replace(/-([a-z])/gi, toUpper))\r\n  )\r\n}\r\n\r\nexport default toCamel\r\n","import toCamel from './utils/toCamel'\r\nimport isElement from './utils/isElement'\r\n/**\r\n * 获取HTML元素的某个CSS样式值\r\n * ====================================================\r\n * @param el\r\n * @param attr\r\n * @returns {*}\r\n */\r\nconst getStyle = (el, attr) => {\r\n  const prop = attr === 'float' ? 'cssFloat' : toCamel(attr)\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  return getComputedStyle(el)[prop]\r\n}\r\n\r\nexport default getStyle\r\n","import isElement from './utils/isElement'\r\nimport getStyle from './getStyle'\r\n\r\nconst getScrollParent = (el) => {\r\n  const $root = window\r\n  const $parent = el.parentNode\r\n\r\n  if(!isElement(el)) {\r\n    return null\r\n  }\r\n\r\n  if (!$parent) {\r\n    return el\r\n  }\r\n\r\n  if ($parent === $root.document) {\r\n    if ($root.document.body.scrollTop || $root.document.body.scrollLeft) {\r\n      return $root.document.body\r\n    } else {\r\n      return $root.document.documentElement\r\n    }\r\n  }\r\n\r\n  // Firefox want us to check `-x` and `-y` variations as well\r\n  if (\r\n    ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow')) !== -1 ||\r\n    ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow-x')) !== -1 ||\r\n    ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow-y')) !== -1\r\n  ) {\r\n    return $parent\r\n  }\r\n\r\n  return getScrollParent(el.parentNode)\r\n}\r\n\r\nexport default getScrollParent\r\n","const getScrollX = (el = window) => {\r\n  return el.scrollX !== undefined ? el.scrollX : el.scrollLeft\r\n}\r\n\r\nexport default getScrollX\r\n","import isElement from './utils/isElement'\r\nimport getScrollX from './getScrollX'\r\nimport getStyle from './getStyle'\r\n\r\n/**\r\n * 获取某个节点所有父节点的滚动位置\r\n * ====================================================\r\n * @method getScrollTotalX\r\n */\r\nconst getScrollTotalX = (() => {\r\n  const $root = window\r\n  let scrollX = []\r\n\r\n  return (el) => {\r\n    let $parent\r\n\r\n    if(!isElement(el)) {\r\n      return scrollX\r\n    }\r\n\r\n    $parent = el.parentNode\r\n\r\n    if (!$parent) {\r\n      return scrollX\r\n    }\r\n\r\n    if ($parent === $root.document) {\r\n      const $body = document.body || document.documentElement\r\n      const position = getScrollX($body)\r\n      const x = [...scrollX]\r\n\r\n      x.push(position.x)\r\n\r\n      scrollX = []\r\n\r\n      return x\r\n    }\r\n\r\n    if (\r\n      ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow')) !== -1 ||\r\n      ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow-x')) !== -1\r\n    ) {\r\n      const position = getScrollX($parent)\r\n\r\n      scrollX.push(position.x)\r\n    }\r\n\r\n    return getScrollTotalX($parent)\r\n  }\r\n})()\r\n\r\nexport default getScrollTotalX\r\n","const getScrollY = (el = window) => {\r\n  return el.scrollY !== undefined ? el.scrollY : el.scrollTop\r\n}\r\n\r\nexport default getScrollY\r\n","import isElement from './utils/isElement'\r\nimport getScrollY from './getScrolly'\r\nimport getStyle from './getStyle'\r\n\r\n/**\r\n * 获取某个节点所有父节点的滚动位置\r\n * ====================================================\r\n * @method getScrollTotalY\r\n */\r\nconst getScrollTotalY = (() => {\r\n  const $root = window\r\n  let scrollY = []\r\n\r\n  return (el) => {\r\n    let $parent\r\n\r\n    if(!isElement(el)) {\r\n      return scrollY\r\n    }\r\n\r\n    $parent = el.parentNode\r\n\r\n    if (!$parent) {\r\n      return scrollY\r\n    }\r\n\r\n    if ($parent === $root.document) {\r\n      const $body = document.body || document.documentElement\r\n      const position = getScrollY($body)\r\n      const y = [...scrollY]\r\n\r\n      y.push(position.y)\r\n\r\n      scrollY = []\r\n\r\n      return y\r\n    }\r\n\r\n    if (\r\n      ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow')) !== -1 ||\r\n      ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow-y')) !== -1\r\n    ) {\r\n      const position = getScrollY($parent)\r\n\r\n      scrollY.push(position.y)\r\n    }\r\n\r\n    return getScrollTotalY($parent)\r\n  }\r\n})()\r\n\r\nexport default getScrollTotalY\r\n","const getScrollY = (el = window) => {\r\n  return el.scrollY !== undefined ? el.scrollY : el.scrollTop\r\n}\r\n\r\nexport default getScrollY\r\n","const isAncestor = (ancestor, descendent) => {\r\n  let result = false\r\n\r\n  if (!ancestor || !descendent || !ancestor.nodeType || !descendent.nodeType) {\r\n    return result\r\n  }\r\n\r\n  if (ancestor.contains && ancestor !== descendent) {\r\n    result = ancestor.contains(descendent)\r\n  } else if (ancestor.compareDocumentPosition) {\r\n    result = !!(ancestor.compareDocumentPosition(descendent) & 16)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport default isAncestor\r\n","import trim from './utils/trim'\nimport isElement from './utils/isElement'\nimport hasClass from './hasClass'\n\n/**\n * 移除 DOM 节点的 className 样式\n * ========================================================================\n * @method removeClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst removeClass = (el, className) => {\n  let allClass\n  let classList\n\n  if (!isElement(el)) {\n    return false\n  }\n\n  allClass = el.className\n\n  if (!allClass || !hasClass(el, className)) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.remove) {\n    classList.remove(className)\n  } else {\n    allClass = trim(allClass.replace(className, ''))\n    el.className = allClass\n  }\n}\n\nexport default removeClass\n","/**\n * 返回给定值的平方值\n * ========================================================================\n * @method easeInQuad\n * @param {Number} x\n * @returns {number}\n */\nconst easeInQuad = (x) => {\n  return x * x\n}\n\nexport default easeInQuad\n","import toCamel from './utils/toCamel'\r\nimport isElement from './utils/isElement'\r\n\r\nconst setStyle = (el, attr, val) => {\r\n  let prop\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  prop = toCamel(attr)\r\n\r\n  if (prop === 'float') {\r\n    prop = 'cssFloat'\r\n  }\r\n\r\n  el.style[prop] = val\r\n}\r\n\r\nexport default setStyle\r\n","import addClass from './addClass'\r\nimport addStyles from './addStyles'\r\nimport after from './after'\r\nimport attr from './attr'\r\nimport before from './before'\r\nimport byId from './byId'\r\nimport children from './children'\r\nimport closest from './closest'\r\nimport createElement from './createElement'\r\nimport getAttribute from './getAttribute'\r\nimport getDocumentHeight from './getDocumentHeight'\r\nimport getDocumentScrollLeft from './getDocumentScrollLeft'\r\nimport getDocumentScrollTop from './getDocumentScrollTop'\r\nimport getDocumentWidth from './getDocumentWidth'\r\nimport getNextSibling from './getNextSibling'\r\nimport getNextSiblingBy from './getNextSiblingBy'\r\nimport getNextSiblings from './getNextSiblings'\r\nimport getOffset from './getOffset'\r\nimport getOffsetLeft from './getOffsetLeft'\r\nimport getOffsetTop from './getOffsetTop'\r\nimport getPageY from './getPageY'\r\nimport getPageX from './getPageX'\r\nimport getPageXY from './getPageXY'\r\nimport getParentOrHost from './getParentOrHost'\r\nimport getPreviousSibling from './getPreviousSibling'\r\nimport getPreviousSiblingBy from './getPreviousSiblingBy'\r\nimport getPreviousSiblings from './getPreviousSiblings'\r\nimport getScrollParent from './getScrollParent'\r\nimport getScrollTotalX from './getScrollTotalX'\r\nimport getScrollTotalY from './getScrollTotalY'\r\nimport getScrollTotalXY from './getScrollTotalXY'\r\nimport getScrollX from './getScrollX'\r\nimport getScrollY from './getScrollY'\r\nimport getScrollXY from './getScrollXY'\r\nimport getSiblings from './getSiblings'\r\nimport getStyle from './getStyle'\r\nimport getViewportHeight from './getViewportHeight'\r\nimport getViewportWidth from './getViewportWidth'\r\nimport has from './has'\r\nimport hasClass from './hasClass'\r\nimport html from './html'\r\nimport index from './index'\r\nimport insertAfter from './insertAfter'\r\nimport insertBefore from './insertBefore'\r\nimport insertHTMLAfter from './insertHTMLAfter'\r\nimport insertHTMLBefore from './insertHTMLBefore'\r\nimport isAncestor from './isAncestor'\r\nimport isMatched from './isMatched'\r\nimport matches from './matches'\r\nimport next from './next'\r\nimport nextAll from './nextAll'\r\nimport prev from './prev'\r\nimport prevAll from './prevAll'\r\nimport removeClass from './removeClass'\r\nimport replaceClass from './replaceClass'\r\nimport scrollTo from './scrollTo'\r\nimport setAttribute from './setAttribute'\r\nimport setAttributes from './setAttributes'\r\nimport setProperty from './setProperty'\r\nimport setStyle from './setStyle'\r\nimport siblings from './siblings'\r\nimport toggle from './toggle'\r\nimport toggleClass from './toggleClass'\r\n\r\nconst DOM = {\r\n  addClass,\r\n  addStyles,\r\n  after,\r\n  attr,\r\n  before,\r\n  byId,\r\n  children,\r\n  closest,\r\n  createElement,\r\n  getAttribute,\r\n  getDocumentHeight,\r\n  getDocumentScrollLeft,\r\n  getDocumentScrollTop,\r\n  getDocumentWidth,\r\n  getNextSibling,\r\n  getNextSiblingBy,\r\n  getNextSiblings,\r\n  getOffset,\r\n  getOffsetLeft,\r\n  getOffsetTop,\r\n  getPageY,\r\n  getPageX,\r\n  getPageXY,\r\n  getParentOrHost,\r\n  getPreviousSibling,\r\n  getPreviousSiblingBy,\r\n  getPreviousSiblings,\r\n  getScrollParent,\r\n  getScrollTotalX,\r\n  getScrollTotalY,\r\n  getScrollTotalXY,\r\n  getScrollX,\r\n  getScrollY,\r\n  getScrollXY,\r\n  getSiblings,\r\n  getStyle,\r\n  getViewportHeight,\r\n  getViewportWidth,\r\n  has,\r\n  hasClass,\r\n  html,\r\n  index,\r\n  insertAfter,\r\n  insertBefore,\r\n  insertHTMLAfter,\r\n  insertHTMLBefore,\r\n  isAncestor,\r\n  isMatched,\r\n  matches,\r\n  next,\r\n  nextAll,\r\n  prev,\r\n  prevAll,\r\n  removeClass,\r\n  replaceClass,\r\n  scrollTo,\r\n  setAttribute,\r\n  setAttributes,\r\n  setProperty,\r\n  setStyle,\r\n  siblings,\r\n  toggle,\r\n  toggleClass\r\n}\r\n\r\nexport default DOM\r\n","import isElement from './utils/isElement'\r\nimport isString from './utils/isString'\r\nimport isObject from './utils/isObject'\r\nimport extend from './utils/extend'\r\n\r\n/**\r\n * 给元素添加样式\r\n * ====================================================\r\n * @param {HTMLElement} el\r\n * @param {Object|String} styles\r\n * @returns {any}\r\n */\r\nconst addStyles = (el, styles) => {\r\n  let rules = ''\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (el.style.cssText) {\r\n    if (isObject(styles)) {\r\n      Object.keys(styles).forEach((prop) => {\r\n        const val = styles[prop]\r\n        rules += `${prop}:${val};`\r\n      })\r\n    } else if (isString(styles)) {\r\n      rules = styles\r\n    }\r\n\r\n    el.style.cssText += rules\r\n  } else {\r\n    if (isObject(styles)) {\r\n      extend(el.style, styles)\r\n    }\r\n  }\r\n}\r\n\r\nexport default addStyles\r\n","import hasOwn from './hasOwn'\n\n/**\n * 扩展对象\n * ========================================================================\n * @method extend\n * @param {Object} origin\n * @param {Object} source\n */\nconst extend = (origin, source) => {\n  const keys = Object.keys(source)\n\n  keys.forEach((prop) => {\n    if (hasOwn(source, prop)) {\n      origin[prop] = source[prop]\n    }\n  })\n}\n\nexport default extend\n","import isElement from './utils/isElement'\r\nimport isHTML from './utils/isHTML'\r\nimport insertAfter from './insertAfter'\r\nimport insertHTMLAfter from './insertHTMLAfter'\r\n\r\nconst after = (el, reference) => {\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (isElement(reference)) {\r\n    insertAfter(el, reference)\r\n  } else if (isHTML(reference)) {\r\n    insertHTMLAfter(el, reference)\r\n  }\r\n}\r\n\r\nexport default after\r\n","import isElement from './utils/isElement'\r\nimport isString from './utils/isString'\r\nimport isObject from './utils/isObject'\r\nimport setAttribute from './setAttribute'\r\nimport setAttributes from './setAttributes'\r\nimport getAttribute from './getAttribute'\r\n\r\nconst attr = (el, attr, value) => {\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (isString(attr)) {\r\n    if (typeof value !== 'undefined') {\r\n      setAttribute(el, attr, value)\r\n    } else {\r\n      getAttribute(el, attr)\r\n    }\r\n  } else if (isObject(attr)) {\r\n    setAttributes(el, attr)\r\n  }\r\n}\r\n\r\nexport default attr\r\n","import isElement from './utils/isElement'\r\nimport insertBefore from './insertBefore'\r\nimport isHTML from './utils/isHTML'\r\nimport insertHTMLBefore from './insertHTMLBefore'\r\n\r\nconst before = (el, reference) => {\r\n  if(!isElement(el)){\r\n    return false\r\n  }\r\n\r\n  if(isElement(reference)) {\r\n    insertBefore(el, reference)\r\n  } else if(isHTML(reference)) {\r\n    insertHTMLBefore(el, reference)\r\n  }\r\n}\r\n\r\nexport default before\r\n","import isElement from './utils/isElement'\r\n\r\nconst byId = (id, el) => {\r\n  const selector = id.replace(/^#/i, '')\r\n  const $el = isElement(el) ? el : document\r\n  return $el.querySelector(`#${selector}`)\r\n}\r\n\r\nexport default byId\r\n","import siblings from './siblings'\r\n\r\nconst children = (el) => {\r\n  return siblings(el.firstChild)\r\n}\r\n\r\nexport default children\r\n","import matches from './matches'\nimport getParentOrHost from './getParentOrHost'\n\n/**\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\n * ========================================================================\n * @method closest\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）DOM 元素的选择其\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\n */\nconst closest = (el, selector, ctx, includeCTX) => {\n  const context = ctx || document\n\n  if (!el) {\n    return null\n  }\n\n  do {\n    /* istanbul ignore else */\n    if (\n      (selector != null &&\n        (selector.startsWith('>')\n          ? el.parentNode === context && matches(el, selector)\n          : matches(el, selector))) ||\n      (includeCTX && el === context)\n    ) {\n      return el\n    }\n\n    /* istanbul ignore else */\n    if (el === context) {\n      break\n    }\n\n    /* jshint boss:true */\n  } while ((el = getParentOrHost(el)))\n}\n\nexport default closest\n","import getViewportHeight from './getViewportHeight'\r\n\r\nconst getDocumentHeight = () => {\r\n  const scrollHeight =\r\n    document.documentElement.scrollHeight || document.body.scrollHeight\r\n  return Math.max(scrollHeight, getViewportHeight())\r\n}\r\n\r\nexport default getDocumentHeight\r\n","import getViewportWidth from './getViewportWidth'\r\n\r\nconst getDocumentWidth = () => {\r\n  const scrollWidth =\r\n    document.documentElement.scrollWidth || document.body.scrollWidth\r\n  return Math.max(scrollWidth, getViewportWidth())\r\n}\r\n\r\nexport default getDocumentWidth\r\n","import isElement from './utils/isElement'\r\nimport isMatched from './isMatched'\r\nimport getNextSibling from './getNextSibling'\r\n\r\nconst getNextSiblingBy = (el, match) => {\r\n  let $el = isElement(el) ? el : null\r\n\r\n  while ($el) {\r\n    $el = getNextSibling($el)\r\n\r\n    if (isMatched($el, match)) {\r\n      return $el\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default getNextSiblingBy\r\n","import getOffsetLeft from './getOffsetLeft'\nimport getOffsetTop from './getOffsetTop'\n\n/**\n * 获取 DOM 节点相对于窗口的 left 和 top 值\n * ========================================================================\n * @method getOffset\n * @param {HTMLElement} el - DOM 节点\n * @returns {{left: Number, top: Number}}\n */\nconst getOffset = (el) => {\n  const x = getOffsetTop(el)\n  const y = getOffsetLeft(el)\n\n  return {\n    x,\n    y\n  }\n}\n\nexport default getOffset\n","import isElement from './utils/isElement'\r\nimport getPageX from './getPageX'\r\nimport getPageY from './getPageY'\r\n\r\nconst getPageXY = (el) => {\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  return {\r\n    x: getPageY(el),\r\n    y: getPageX(el)\r\n  }\r\n}\r\n\r\nexport default getPageXY\r\n","import isElement from './utils/isElement'\r\nimport isMatched from './isMatched'\r\nimport getPreviousSibling from './getPreviousSibling'\r\n\r\nconst getPreviousSiblingBy = (el, match) => {\r\n  let $el = isElement(el) ? el : null\r\n\r\n  while ($el) {\r\n    $el = getPreviousSibling($el)\r\n\r\n    if (isMatched($el, match)) {\r\n      return $el\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default getPreviousSiblingBy\r\n","import getScrollTotalX from './getScrollTotalX'\r\nimport getScrollTotalY from './getScrollTotalY'\r\n\r\nconst getScrollTotalXY = (el) => {\r\n  return {\r\n    x: getScrollTotalX(el),\r\n    y: getScrollTotalY(el)\r\n  }\r\n}\r\n\r\nexport default getScrollTotalXY\r\n","import getScrollX from './getScrollX'\r\nimport getScrollY from './getScrollY'\r\n\r\nconst getScrollXY = (el = window) => {\r\n  return {\r\n    x: getScrollX(el),\r\n    y: getScrollY(el)\r\n  }\r\n}\r\n\r\nexport default getScrollXY\r\n","import isElement from './utils/isElement'\r\nimport isString from './utils/isString'\r\nimport isAncestor from './isAncestor'\r\n\r\nconst has = (ancestor, descendent) => {\r\n  if (!isElement(ancestor)) {\r\n    return false\r\n  }\r\n\r\n  if (isElement(descendent)) {\r\n    return isAncestor(ancestor, descendent)\r\n  } else if (isString(descendent)) {\r\n    return !!ancestor.querySelector(descendent)\r\n  }\r\n}\r\n\r\nexport default has\r\n","import isHTML from './utils/isHTML'\r\nimport isElement from './utils/isElement'\r\nimport createElement from './createElement'\r\n\r\nconst html = (el, str) => {\r\n  const $fragment = document.createDocumentFragment()\r\n\r\n  if (isHTML(el)) {\r\n    const children = createElement('div', {\r\n      innerHTML: str\r\n    }).childNodes\r\n\r\n    children.forEach((child) => {\r\n      return $fragment.appendChild(child)\r\n    })\r\n    return $fragment\r\n  } else if (isElement(el)) {\r\n    if (str) {\r\n      el.innerHTML = str\r\n    } else {\r\n      return el.innerHTML\r\n    }\r\n  }\r\n}\r\n\r\nexport default html\r\n","import isElement from './utils/isElement'\r\nimport isString from './utils/isString'\r\nimport isArray from './utils/isArray'\r\nimport getSiblings from './getSiblings'\r\n\r\nconst index = function(el, target) {\r\n  const indexOf = (list, el) => {\r\n    let index = -1\r\n\r\n    if (!isArray(list)) {\r\n      return index\r\n    }\r\n\r\n    list.forEach((item, i) => {\r\n      if (item === el) {\r\n        index = i\r\n      }\r\n    })\r\n\r\n    return index\r\n  }\r\n\r\n  let i = -1\r\n  let list\r\n\r\n  if (!target) {\r\n    if (isString(el)) {\r\n      list = [...document.querySelectorAll(el)]\r\n      i = indexOf(list, document.querySelector(el))\r\n    } else if (isElement(el)) {\r\n      list = getSiblings(el, true)\r\n      i = indexOf(list, el)\r\n    }\r\n  } else {\r\n    list = getSiblings(el, true)\r\n    i = indexOf(list, el)\r\n  }\r\n\r\n  return i\r\n}\r\n\r\nexport default index\r\n","import getNextSibling from './getNextSibling'\r\n\r\nconst next = (el) => {\r\n  return getNextSibling(el)\r\n}\r\n\r\nexport default next\r\n","import getNextSiblings from './getNextSiblings'\r\n\r\nconst nextAll = (el) => {\r\n  return getNextSiblings(el)\r\n}\r\n\r\nexport default nextAll\r\n","import getPreviousSibling from './getPreviousSibling'\r\n\r\nconst prev = (el) => {\r\n  return getPreviousSibling(el)\r\n}\r\n\r\nexport default prev\r\n","import getPreviousSiblings from './getPreviousSiblings'\r\n\r\nconst prevAll = (el) => {\r\n  return getPreviousSiblings(el)\r\n}\r\n\r\nexport default prevAll\r\n","import isElement from './utils/isElement'\r\nimport hasClass from './hasClass'\r\n\r\n/**\r\n * 替换 DOM 节点的样式类\r\n * ====================================================\r\n * @param {HTMLElement} el - 要替换样式的 DOM 节点\r\n * @param {String} oldCls - 要替换的目标样式名称\r\n * @param {String} newCls - 新的样式名称\r\n * @returns {*}\r\n */\r\nconst replaceClass = (el, oldCls, newCls) => {\r\n  let allClass\r\n  let classList\r\n\r\n  if (!isElement(el) || !hasClass(el, oldCls)) {\r\n    return false\r\n  }\r\n\r\n  allClass = el.className\r\n  classList = el.classList\r\n\r\n  if (classList?.replace) {\r\n    classList.replace(oldCls, newCls)\r\n  } else {\r\n    el.className = allClass.replace(oldCls, newCls)\r\n  }\r\n}\r\n\r\nexport default replaceClass\r\n","import easeInQuad from './utils/easeInQuad'\nimport isFunction from './utils/isFunction'\nimport isElement from './utils/isElement'\n\n/**\n * 指定 DOM 节点滚动到指定 top 位置\n * ========================================================================\n * @method scrollTo\n * @param {HTMLElement|String} el - （必须）要滚动的 DOM 节点\n * @param {Number} top - （必须）滚动的 scrollTop 数值\n * @param {Function} [afterStop] - （可选）滚动完成的回调函数\n */\nconst scrollTo = (el, top, afterStop) => {\n  const $el = isElement(el) ? el : document.querySelector(el)\n  let scrollTop = $el.scrollTop\n  let step = 0\n  const distance = top - scrollTop\n  const MAX_HEIGHT = $el.scrollHeight\n  const MAX_TOP = top - MAX_HEIGHT <= 0 ? top : MAX_HEIGHT\n  const stop = (top) => {\n    if (isFunction(afterStop)) {\n      afterStop(top)\n    }\n\n    return false\n  }\n  const play = () => {\n    step += 1\n\n    // 向上滚动\n    if (distance < 0) {\n      scrollTop -= easeInQuad(step)\n      $el.scrollTop = scrollTop\n\n      if (scrollTop <= top) {\n        $el.scrollTop = top\n        return stop(top)\n      }\n    } else {\n      scrollTop += easeInQuad(step)\n      $el.scrollTop = scrollTop\n\n      if (scrollTop >= MAX_TOP) {\n        $el.scrollTop = MAX_TOP\n        return stop(MAX_TOP)\n      }\n    }\n\n    requestAnimationFrame(play)\n  }\n\n  requestAnimationFrame(play)\n}\n\nexport default scrollTo\n","const setProperty = (prop, value) => {\r\n  const documentElement = document.documentElement\r\n  documentElement.style.setProperty(prop, value)\r\n}\r\n\r\nexport default setProperty\r\n","import isElement from './utils/isElement'\r\nimport getStyle from './getStyle'\r\nimport setStyle from './setStyle'\r\n\r\nconst toggle = (el) => {\r\n  if(!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if(getStyle(el, 'display') !== 'none') {\r\n    setStyle(el, 'display', 'none')\r\n  } else {\r\n    setStyle(el, 'display', 'block')\r\n  }\r\n}\r\n\r\nexport default toggle\r\n","import isElement from './utils/isElement'\r\nimport hasClass from './hasClass'\r\nimport addClass from './addClass'\r\nimport removeClass from './removeClass'\r\n\r\n/**\r\n * 切换元素的类。\r\n * ========================================================================\r\n * @method\r\n * @param {HTMLElement} el\r\n * @param {String} className\r\n */\r\nconst toggleClass = (el, className) => {\r\n  let classList = el.classList\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.toggle) {\r\n    classList.toggle(className)\r\n  } else {\r\n    if (hasClass(el, className)) {\r\n      removeClass(el, className)\r\n    } else {\r\n      addClass(el, className)\r\n    }\r\n  }\r\n}\r\n\r\nexport default toggleClass\r\n"],"names":["toString","val","Object","prototype","apply","isFunction","isObject","o","isElement","nodeName","tagName","nodeType","hasClass","el","className","pattern","RegExp","allClass","classList","contains","exec","addClass","add","length","isString","str","hasOwn","obj","prop","hasOwnProperty","call","trim","replace","TAGS","isHTML","html","basic","full","slice","map","tag","join","test","getNextSibling","nextElementSibling","insertAfter","reference","$parent","parentNode","$nextSibling","insertBefore","appendChild","insertHTMLAfter","$el","document","querySelector","insertAdjacentHTML","setAttribute","attr","value","toLowerCase","style","cssText","innerHTML","innerText","setAttributes","attrs","keys","forEach","getAttribute","insertHTMLBefore","getPreviousSibling","previousElementSibling","getPreviousSiblings","prev","$sibling","push","getNextSiblings","next","getSiblings","includeSelf","list","siblings","matches","selector","sel","msMatchesSelector","getParentOrHost","host","isArray","Array","isDOM","isHTMLCollection","fragment","isTextNode","createElement","children","$fragment","createDocumentFragment","isValidChild","child","append","$child","createTextNode","every","getViewportHeight","Math","max","documentElement","clientHeight","window","innerHeight","getDocumentScrollLeft","doc","$document","scrollLeft","body","getDocumentScrollTop","scrollTop","getViewportWidth","clientWidth","innerWidth","isMatched","match","getOffsetLeft","left","offsetLeft","offsetParent","getOffsetTop","top","offsetTop","getPageY","floor","box","pageY","getBoundingClientRect","ownerDocument","getPageX","pageX","toCamel","props","indexOf","x","l","toUpperCase","getStyle","getComputedStyle","getScrollParent","$root","getScrollX","undefined","scrollX","getScrollTotalX","$body","position","getScrollY","scrollY","getScrollTotalY","y","isAncestor","ancestor","descendent","result","compareDocumentPosition","removeClass","remove","easeInQuad","setStyle","DOM","addStyles","styles","rules","origin","source","after","before","byId","id","firstChild","closest","ctx","includeCTX","context","startsWith","getDocumentHeight","scrollHeight","getDocumentWidth","scrollWidth","getNextSiblingBy","getOffset","getPageXY","getPreviousSiblingBy","getScrollTotalXY","getScrollXY","has","childNodes","index","target","item","i","querySelectorAll","nextAll","prevAll","replaceClass","oldCls","newCls","scrollTo","afterStop","step","distance","MAX_HEIGHT","MAX_TOP","stop","play","requestAnimationFrame","setProperty","toggle","toggleClass"],"mappings":"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"}