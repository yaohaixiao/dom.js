{"version":3,"file":"dom.min.js","sources":["../../utils/lang/toString.js","../../utils/types/isFunction.js","../../utils/types/isObject.js","../../utils/types/isElement.js","../../utils/types/isString.js","../../utils/types/isArray.js","../../setAttribute.js","../../utils/lang/hasOwn.js","../../setAttributes.js","../../getAttribute.js","../../getAttributes.js","../../removeAttribute.js","../../hasClass.js","../../addClass.js","../../utils/string/trim.js","../../removeClass.js","../../utils/types/tags.js","../../utils/types/isHTML.js","../../utils/types/isHTMLCollection.js","../../utils/types/isFragment.js","../../utils/types/isTextNode.js","../../utils/types/isDOM.js","../../createElement.js","../../attributes/index.js","../../removeAttributes.js","../../replaceClass.js","../../toggleClass.js","../../attr.js","../../html.js","../../text.js","../../matches.js","../../getHostOrParent.js","../../isAncestor.js","../../getOffsetParent.js","../../utils/string/toCamel.js","../../getStyle.js","../../getScrollParent.js","../../getPreviousSibling.js","../../getPreviousSiblings.js","../../getNextSibling.js","../../getNextSiblings.js","../../getSiblings.js","../../getViewportHeight.js","../../getViewportWidth.js","../../isMatched.js","../../siblings.js","../../base/index.js","../../clone.js","../../closest.js","../../contains.js","../../byClass.js","../../byId.js","../../index.js","../../isInViewport.js","../../parent.js","../../children.js","../../insertBefore.js","../../insertAfter.js","../../insertHTMLAfter.js","../../insertHTMLBefore.js","../../insertion/index.js","../../append.js","../../prepend.js","../../after.js","../../before.js","../../getOffsetLeft.js","../../getOffsetTop.js","../../getOffset.js","../../getDocumentScrollLeft.js","../../getPageX.js","../../getDocumentScrollTop.js","../../getPageY.js","../../getScrollLeft.js","../../getScrollTop.js","../../getScrollTotalLeft.js","../../getScrollTotalTop.js","../../utils/lang/easeInQuad.js","../../offset.js","../../utils/types/isNumber.js","../../setStyle.js","../../size/index.js","../../getDocumentHeight.js","../../getDocumentWidth.js","../../innerHeight.js","../../innerWidth.js","../../outerHeight.js","../../outerWidth.js","../../height.js","../../width.js","../../setStyles.js","../../utils/lang/extend.js","../../getProperty.js","../../setProperty.js","../../style/index.js","../../getStyles.js","../../css.js","../../prop.js","../../dom.js","../../position/index.js","../../getPageXY.js","../../getScroll.js","../../getScrollTotal.js","../../scrollTo.js","../../sibling/index.js","../../getNextSiblingBy.js","../../getPreviousSiblingBy.js","../../next.js","../../prev.js","../../nextAll.js","../../prevAll.js","../../types/index.js","../../isCollection.js","../../isText.js"],"sourcesContent":["/**\n * Object 对象原型上的 toString 方法\n * ========================================================================\n * @method toString\n * @param {*} val\n * @returns {string}\n */\nconst toString = (val) => {\n  return Object.prototype.toString.apply(val)\n}\n\nexport default toString\n","import toString from '../lang/toString'\n\n/**\n * 检测测试数据是否为 Function 类型\n * ========================================================================\n * @method isFunction\n * @param {*} val - （必须）待检测的数据\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\n */\nconst isFunction = (val) => {\n  return typeof val === 'function' || toString(val) === '[object Function]'\n}\n\nexport default isFunction\n","import toString from '../lang/toString'\nimport isFunction from './isFunction'\n\n/**\n * 检测数据是否为 Object 类型\n * ========================================================================\n * @method isObject\n * @param {*} o\n * @returns {boolean}\n */\nconst isObject = (o) => {\n  return (\n    (toString(o) === '[object Object]' ||\n      typeof o === 'object' ||\n      isFunction(o)) &&\n    o !== null\n  )\n}\n\nexport default isObject\n","import isObject from './isObject'\n\n/**\n * 检测数据是否为 HTMLElement DOM 节点\n * ========================================================================\n * @method isElement\n * @param {*} o\n * @returns {boolean}\n */\nconst isElement = (o) => {\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\n}\n\nexport default isElement\n","/**\n * 检测数据是否为 String 类型\n * ========================================================================\n * @method isArray\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return typeof str === 'string'\n}\n\nexport default isString\n","import toString from '../lang/toString'\n\n/**\n * 检测数据是否为 Array 类型\n * ========================================================================\n * @method isArray\n * @param {*} o\n * @returns {boolean}\n */\nconst isArray = (o) => {\n  if (Array.isArray) {\n    return Array.isArray(o)\n  } else {\n    return toString(o) === '[object Array]'\n  }\n}\n\nexport default isArray\n","import isElement from './utils/types/isElement'\n\n/**\n * 给 DOM 节点设置属性/值\n * ========================================================================\n * @method setAttribute\n * @param {HTMLElement} el - DOM 节点\n * @param {String} attr - 属性名称\n * @param {String|Number|Boolean} value - 属性值\n */\nconst setAttribute = (el, attr, value) => {\n  let tagName\n\n  if (!isElement(el)) {\n    return false\n  }\n\n  tagName = el.tagName.toLowerCase()\n\n  switch (attr) {\n    case 'className':\n      el.className = value\n      break\n    case 'htmlFor':\n      el.setAttribute('for', value)\n      break\n    case 'style':\n      if (el.style.cssText) {\n        el.style.cssText = value\n      } else {\n        el.setAttribute(attr, value)\n      }\n      break\n    case 'value':\n      if (tagName === 'input' || tagName === 'textarea') {\n        el.value = value\n      } else {\n        el.setAttribute(attr, value)\n      }\n      break\n    default:\n      el.setAttribute(attr, value)\n      break\n  }\n}\n\nexport default setAttribute\n","/**\n * 检测对象自身属性中是否具有指定的属性。\n * ========================================================================\n * @method hasOwn\n * @param {Object} obj - （必须）检测的目标对象\n * @param {String} prop - （必须）属性名\n * @returns {Boolean}\n */\nconst hasOwn = (obj, prop) => {\n  const hasOwnProperty = Object.prototype.hasOwnProperty\n  return obj && hasOwnProperty.call(obj, prop)\n}\n\nexport default hasOwn\n","import isObject from './utils/types/isObject'\nimport hasOwn from './utils/lang/hasOwn'\nimport setAttribute from './setAttribute'\n\nconst setAttributes = (el, attrs) => {\n  if (!el || !isObject(attrs)) {\n    return false\n  }\n\n  Object.keys(attrs).forEach((attr) => {\n    const value = attrs[attr]\n\n    if (hasOwn(attrs, attr)) {\n      setAttribute(el, attr, value)\n    }\n  })\n}\n\nexport default setAttributes\n","import isElement from './utils/types/isElement'\r\n\r\nconst getAttribute = (el, attr) => {\r\n  let tagName\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'className':\r\n      return el.getAttribute('class')\r\n    case 'htmlFor':\r\n      return el.getAttribute('for')\r\n    case 'style':\r\n      return el.style.cssText\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        return el.value\r\n      } else {\r\n        return el.setAttribute(attr)\r\n      }\r\n    default:\r\n      return el.setAttribute(attr)\r\n  }\r\n}\r\n\r\nexport default getAttribute\r\n","import isElement from './utils/types/isElement'\r\nimport isArray from './utils/types/isArray'\r\nimport getAttribute from './getAttribute'\r\n\r\nconst getAttributes = (el, props = []) => {\r\n  const attrs = {}\r\n  let keys = props\r\n\r\n  if (!isElement(el)) {\r\n    return null\r\n  }\r\n\r\n  if (!isArray(keys) || keys.length < 1) {\r\n    keys = el.getAttributeNames()\r\n  }\r\n\r\n  keys.forEach((key) => {\r\n    const value = getAttribute(el, key)\r\n\r\n    if (value) {\r\n      attrs[key] = value\r\n    }\r\n  })\r\n\r\n  return attrs\r\n}\r\n\r\nexport default getAttributes\r\n","import isElement from './utils/types/isElement'\r\n\r\nconst removeAttribute = (el, attr) => {\r\n  let tagName\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'className':\r\n      el.removeAttribute('class')\r\n      break\r\n    case 'htmlFor':\r\n      el.removeAttribute('for')\r\n      break\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        el.value = ''\r\n      } else {\r\n        el.removeAttribute(attr)\r\n      }\r\n      break\r\n    default:\r\n      el.removeAttribute(attr)\r\n      break\r\n  }\r\n}\r\n\r\nexport default removeAttribute\r\n","import isElement from './utils/types/isElement'\n\n/**\n * 检测 DOM 节点是否包含名为 className 的样式\n * ========================================================================\n * @method hasClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst hasClass = (el, className) => {\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\n  let allClass\n  let classList\n\n  if (!isElement(el)) {\n    return false\n  }\n\n  allClass = el.className\n\n  if (!allClass) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.contains) {\n    return el.classList.contains(className)\n  }\n\n  return !!pattern.exec(allClass)\n}\n\nexport default hasClass\n","import isElement from './utils/types/isElement'\nimport hasClass from './hasClass'\n\n/**\n * 给 DOM 节点添加名为 className 的样式\n * ========================================================================\n * @method addClass\n * @see https://developer.mozilla.org/zh-CN/docs/Web/API/Element/classList\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst addClass = (el, className) => {\n  let classList\n  let allClass\n\n  if (!isElement(el) || hasClass(el, className)) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.add) {\n    classList.add(className)\n  } else {\n    allClass = el.className\n    allClass += allClass.length > 0 ? ' ' + className : className\n    el.className = allClass\n  }\n}\n\nexport default addClass\n","import isString from '../types/isString'\n\n/**\n * 清楚字符串起始位置所有的空格\n * ========================================================================\n * @method trim\n * @param {string} str\n * @returns {string|Boolean}\n */\nconst trim = (str) => {\n  if (!isString(str)) {\n    return false\n  }\n  return str.replace(/(^\\s+)|(\\s+$)/g, '')\n}\n\nexport default trim\n","import trim from './utils/string/trim'\nimport isElement from './utils/types/isElement'\nimport hasClass from './hasClass'\n\n/**\n * 移除 DOM 节点的 className 样式\n * ========================================================================\n * @method removeClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst removeClass = (el, className) => {\n  let allClass\n  let classList\n\n  if (!isElement(el)) {\n    return false\n  }\n\n  allClass = el.className\n\n  if (!allClass || !hasClass(el, className)) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.remove) {\n    classList.remove(className)\n  } else {\n    allClass = trim(allClass.replace(className, ''))\n    el.className = allClass\n  }\n}\n\nexport default removeClass\n","// HTML 合法的标签\nconst TAGS = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'math',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rb',\n  'rp',\n  'rt',\n  'rtc',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'search',\n  'section',\n  'select',\n  'slot',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'svg',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr'\n]\n\nexport default TAGS\n","import isString from './isString'\nimport trim from '../string/trim'\nimport TAGS from './tags'\n\n/**\n * 检测测试数据是否为合法的 HTML 代码\n * ========================================================================\n * @method isHTML\n * @category Lang\n * @see https://github.com/sindresorhus/html-tags\n * @see https://github.com/sindresorhus/is-html\n * @param {String} str - 要检测的数据\n * @returns {Boolean} 'val' 为合法的 HTML 代码，返回 true，否则返回 false\n */\nconst isHTML = (str) => {\n  let html\n  let basic\n  let full\n\n  if (!isString(str)) {\n    return false\n  }\n\n  // 为了提高性能，我们将其限制在合理的长度内。\n  html = trim(str).slice(0, 1000)\n  basic = /\\s*<!doctype html>|<html\\b[^>]*>|<body\\b[^>]*>|<x-[^>]+>/i\n  full = new RegExp(TAGS.map((tag) => `<${tag}\\\\b[^>]*>`).join('|'), 'i')\n\n  return basic.test(html) || full.test(html)\n}\n\nexport default isHTML\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return !!(isObject(el) && toString(el) === '[object NodeList]')\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from '../lang/toString'\nimport isObject from './isObject'\n\nconst isFragment = (fragment) => {\n  return !!(\n    isObject(fragment) && toString(fragment) === '[object DocumentFragment]'\n  )\n}\n\nexport default isFragment\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (toString(el) === '[object Text]' || (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import isObject from './utils/types/isObject'\nimport isString from './utils/types/isString'\nimport isArray from './utils/types/isArray'\nimport isDOM from './utils/types/isDOM'\nimport setAttributes from './setAttributes'\n\n/**\n * 创建 DOM 节点，并添加属性和子节点\n * ========================================================================\n * @method createElement\n * @param {String} tagName - 标签名称\n * @param {Object|Array|HTMLElement|DocumentFragment|String} attrs - 属性对象或者子节点\n * @param {Array|HTMLElement|DocumentFragment|String} [children] - 子节点数组\n * @returns {HTMLElement}\n */\nconst createElement = (tagName, attrs, children) => {\n  const $fragment = document.createDocumentFragment()\n  const $el = document.createElement(tagName)\n  const isValidChild = (child) => {\n    return isDOM(child) || isString(child)\n  }\n  const append = (child) => {\n    let $child\n\n    if (!isValidChild(child)) {\n      return false\n    }\n\n    if (isDOM(child)) {\n      $child = child\n    } else if (isString(child)) {\n      $child = document.createTextNode(child)\n    }\n\n    $fragment.appendChild($child)\n  }\n\n  if (isObject(attrs)) {\n    setAttributes($el, attrs)\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\n    attrs.forEach((child) => {\n      append(child)\n    })\n  } else if (isDOM(attrs)) {\n    append(attrs)\n  } else if (isString(attrs)) {\n    append(document.createTextNode(attrs))\n  }\n\n  if (isArray(children)) {\n    children.forEach((child) => {\n      append(child)\n    })\n  } else {\n    append(children)\n  }\n\n  $el.appendChild($fragment)\n\n  return $el\n}\n\nexport default createElement\n","import attr from '../attr'\r\nimport getAttribute from '../getAttribute'\r\nimport setAttribute from '../setAttribute'\r\nimport removeAttribute from '../removeAttribute'\r\nimport getAttributes from '../getAttributes'\r\nimport setAttributes from '../setAttributes'\r\nimport removeAttributes from '../removeAttributes'\r\nimport hasClass from '../hasClass'\r\nimport addClass from '../addClass'\r\nimport replaceClass from '../replaceClass'\r\nimport removeClass from '../removeClass'\r\nimport toggleClass from '../toggleClass'\r\nimport html from '../html'\r\nimport text from '../text'\r\n\r\nconst DOM = {\r\n  getAttribute,\r\n  setAttribute,\r\n  removeAttribute,\r\n  getAttributes,\r\n  setAttributes,\r\n  removeAttributes,\r\n  hasClass,\r\n  addClass,\r\n  replaceClass,\r\n  removeClass,\r\n  toggleClass,\r\n  attr,\r\n  html,\r\n  text\r\n}\r\n\r\nexport default DOM\r\n","import isElement from './utils/types/isElement'\r\nimport isArray from './utils/types/isArray'\r\nimport removeAttribute from './removeAttribute'\r\n\r\nconst removeAttributes = (el, attrs) => {\r\n  if (!isElement(el) || !attrs || !isArray(el)) {\r\n    return false\r\n  }\r\n\r\n  attrs.forEach((attr) => {\r\n    removeAttribute(el, attr)\r\n  })\r\n}\r\n\r\nexport default removeAttributes\r\n","import isElement from './utils/types/isElement'\r\nimport hasClass from './hasClass'\r\n\r\n/**\r\n * 替换 DOM 节点的样式类\r\n * ====================================================\r\n * @param {HTMLElement} el - 要替换样式的 DOM 节点\r\n * @param {String} oldCls - 要替换的目标样式名称\r\n * @param {String} newCls - 新的样式名称\r\n * @returns {*}\r\n */\r\nconst replaceClass = (el, oldCls, newCls) => {\r\n  let allClass\r\n  let classList\r\n\r\n  if (!isElement(el) || !hasClass(el, oldCls)) {\r\n    return false\r\n  }\r\n\r\n  allClass = el.className\r\n  classList = el.classList\r\n\r\n  if (classList?.replace) {\r\n    classList.replace(oldCls, newCls)\r\n  } else {\r\n    el.className = allClass.replace(oldCls, newCls)\r\n  }\r\n}\r\n\r\nexport default replaceClass\r\n","import isElement from './utils/types/isElement'\r\nimport hasClass from './hasClass'\r\nimport addClass from './addClass'\r\nimport removeClass from './removeClass'\r\n\r\n/**\r\n * 切换元素的类。\r\n * ========================================================================\r\n * @method\r\n * @param {HTMLElement} el\r\n * @param {String} className\r\n */\r\nconst toggleClass = (el, className) => {\r\n  let classList = el.classList\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.toggle) {\r\n    classList.toggle(className)\r\n  } else {\r\n    if (hasClass(el, className)) {\r\n      removeClass(el, className)\r\n    } else {\r\n      addClass(el, className)\r\n    }\r\n  }\r\n}\r\n\r\nexport default toggleClass\r\n","import isElement from './utils/types/isElement'\r\nimport isString from './utils/types/isString'\r\nimport isObject from './utils/types/isObject'\r\nimport isArray from './utils/types/isArray'\r\nimport setAttribute from './setAttribute'\r\nimport setAttributes from './setAttributes'\r\nimport getAttribute from './getAttribute'\r\nimport getAttributes from './getAttributes'\r\n\r\n/**\r\n * 获取或者设置 DOM 节点的单个或者多个 DOM 属性\r\n * ========================================================================\r\n * @method attr\r\n * @see getAttribute\r\n * @see getAttributes\r\n * @see setAttribute\r\n * @set setAttributes\r\n * @param el\r\n * @param attr\r\n * @param value\r\n * @return {boolean|*|{}}\r\n */\r\nconst attr = (el, attr, value) => {\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (!attr && !value) {\r\n    return getAttributes(el)\r\n  }\r\n\r\n  if (isString(attr)) {\r\n    if (typeof value !== 'undefined') {\r\n      setAttribute(el, attr, value)\r\n    } else {\r\n      return getAttribute(el, attr)\r\n    }\r\n  } else if (isObject(attr)) {\r\n    if (isArray(attr)) {\r\n      return getAttributes(el, attr)\r\n    } else {\r\n      setAttributes(el, attr)\r\n    }\r\n  }\r\n}\r\n\r\nexport default attr\r\n","import isHTML from './utils/types/isHTML'\r\nimport isElement from './utils/types/isElement'\r\nimport createElement from './createElement'\r\n\r\nconst html = (el, strHTML) => {\r\n  const $fragment = document.createDocumentFragment()\r\n\r\n  if (isHTML(el)) {\r\n    const children = createElement('div', {\r\n      innerHTML: strHTML\r\n    }).childNodes\r\n\r\n    children.forEach((child) => {\r\n      return $fragment.appendChild(child)\r\n    })\r\n    return $fragment\r\n  } else if (isElement(el)) {\r\n    if (strHTML) {\r\n      el.innerHTML = strHTML\r\n    } else {\r\n      return el.innerHTML\r\n    }\r\n  }\r\n}\r\n\r\nexport default html\r\n","import isElement from './utils/types/isElement'\r\nimport isString from './utils/types/isString'\r\n\r\nconst text = (el, str) => {\r\n  if (isString(el)) {\r\n    return document.createTextNode(el)\r\n  } else if (isElement(el)) {\r\n    if (str) {\r\n      el.innerHTML = str\r\n    } else {\r\n      return el.innerText\r\n    }\r\n  }\r\n}\r\n\r\nexport default text\r\n","/**\n * 获取 el 节点下匹配 selector 选择器的 DOM 节点\n * ========================================================================\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\n * 标 DOM 元素是否为事件代理所期望触发的目标。\n * ========================================================================\n * @method matches\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\n * @returns {Boolean}\n */\nconst matches = (el, selector = '') => {\n  const sel = selector.replace(/^>/i, '')\n\n  if (!selector || !sel || !el) {\n    return false\n  }\n\n  /* istanbul ignore else */\n  if (el.matches) {\n    return el.matches(sel)\n  } else if (el.msMatchesSelector) {\n    return el.msMatchesSelector(sel)\n  } else {\n    return false\n  }\n}\n\nexport default matches\n","/**\n * 获取 DOM 元素的父节点\n * ========================================================================\n * @method getHostOrParent\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\n * @returns {*|HTMLElement}\n */\nconst getHostOrParent = (el) => {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode\n}\n\nexport default getHostOrParent\n","const isAncestor = (ancestor, descendent) => {\r\n  let result = false\r\n\r\n  if (!ancestor || !descendent || !ancestor.nodeType || !descendent.nodeType) {\r\n    return result\r\n  }\r\n\r\n  if (ancestor.contains && ancestor !== descendent) {\r\n    result = ancestor.contains(descendent)\r\n  } else if (ancestor.compareDocumentPosition) {\r\n    result = !!(ancestor.compareDocumentPosition(descendent) & 16)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport default isAncestor\r\n","import isElement from './utils/types/isElement'\r\n\r\n/**\r\n * 返回一个指向最近的（指包含层级上的最近）包含该元素的定位元素。\r\n * 当元素的 style.display 设置为 \"none\" 时，offsetParent 返回 null。\r\n * ========================================================================\r\n * @method getOffsetParent\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/offsetParent\r\n * @param {HTMLElement} el\r\n * @return {Element|null}\r\n */\r\nconst getOffsetParent = (el) => {\r\n  if (!isElement(el)) {\r\n    return null\r\n  }\r\n  return el.offsetParent\r\n}\r\n\r\nexport default getOffsetParent\r\n","const toCamel = (prop) => {\r\n  const props = {}\r\n\r\n  function toUpper(x, l) {\r\n    return l.toUpperCase()\r\n  }\r\n\r\n  return (\r\n    props[prop] ||\r\n    (props[prop] =\r\n      prop.indexOf('-') === -1 ? prop : prop.replace(/-([a-z])/gi, toUpper))\r\n  )\r\n}\r\n\r\nexport default toCamel\r\n","import toCamel from './utils/string/toCamel'\r\nimport isElement from './utils/types/isElement'\r\n/**\r\n * 获取HTML元素的某个CSS样式值\r\n * ====================================================\r\n * @param el\r\n * @param attr\r\n * @returns {*}\r\n */\r\nconst getStyle = (el, attr) => {\r\n  const prop = attr === 'float' ? 'cssFloat' : toCamel(attr)\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  return getComputedStyle(el)[prop]\r\n}\r\n\r\nexport default getStyle\r\n","import isElement from './utils/types/isElement'\r\nimport getStyle from './getStyle'\r\n\r\nconst getScrollParent = (el) => {\r\n  const $root = window\r\n  const $parent = el.parentNode\r\n\r\n  if (!isElement(el)) {\r\n    return null\r\n  }\r\n\r\n  if (!$parent) {\r\n    return el\r\n  }\r\n\r\n  if ($parent === $root.document) {\r\n    if ($root.document.body.scrollTop || $root.document.body.scrollLeft) {\r\n      return $root.document.body\r\n    } else {\r\n      return $root.document.documentElement\r\n    }\r\n  }\r\n\r\n  // Firefox want us to check `-x` and `-y` variations as well\r\n  if (\r\n    ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow')) !== -1 ||\r\n    ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow-x')) !== -1 ||\r\n    ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow-y')) !== -1\r\n  ) {\r\n    return $parent\r\n  }\r\n\r\n  return getScrollParent(el.parentNode)\r\n}\r\n\r\nexport default getScrollParent\r\n","import isElement from './utils/types/isElement'\r\n\r\nconst getPreviousSibling = (el) => {\r\n  return isElement(el) ? el.previousElementSibling : null\r\n}\r\n\r\nexport default getPreviousSibling\r\n","import isElement from './utils/types/isElement'\r\nimport getPreviousSibling from './getPreviousSibling'\r\n\r\nconst getPreviousSiblings = (el) => {\r\n  const prev = []\r\n  let $sibling\r\n\r\n  if (!isElement(el)) {\r\n    return prev\r\n  }\r\n\r\n  $sibling = getPreviousSibling(el)\r\n  prev.push($sibling)\r\n\r\n  while ($sibling) {\r\n    $sibling = getPreviousSibling($sibling)\r\n    prev.push($sibling)\r\n  }\r\n\r\n  return prev\r\n}\r\n\r\nexport default getPreviousSiblings\r\n","import isElement from './utils/types/isElement'\r\n\r\nconst getNextSibling = (el) => {\r\n  return isElement(el) ? el.nextElementSibling : null\r\n}\r\n\r\nexport default getNextSibling\r\n","import isElement from './utils/types/isElement'\r\nimport getNextSibling from './getNextSibling'\r\n\r\nconst getNextSiblings = (el) => {\r\n  const next = []\r\n  let $sibling\r\n\r\n  if (!isElement(el)) {\r\n    return next\r\n  }\r\n\r\n  $sibling = getNextSibling(el)\r\n  next.push($sibling)\r\n\r\n  while ($sibling) {\r\n    $sibling = getNextSibling($sibling)\r\n    next.push($sibling)\r\n  }\r\n\r\n  return next\r\n}\r\n\r\nexport default getNextSiblings\r\n","import getPreviousSiblings from './getPreviousSiblings'\r\nimport getNextSiblings from './getNextSiblings'\r\nimport isElement from './utils/types/isElement'\r\n\r\nconst getSiblings = (el, includeSelf = false) => {\r\n  let list = []\r\n  let prev = []\r\n  let next = []\r\n\r\n  if (!isElement(el)) {\r\n    return list\r\n  }\r\n\r\n  prev = getPreviousSiblings(el)\r\n  list.push(...prev)\r\n\r\n  if (includeSelf) {\r\n    list.push(el)\r\n  }\r\n\r\n  next = getNextSiblings(el)\r\n  list.push(...next)\r\n\r\n  return list\r\n}\r\n\r\nexport default getSiblings\r\n","const getViewportHeight = () => {\r\n  return Math.max(document.documentElement.clientHeight, window.innerHeight)\r\n}\r\n\r\nexport default getViewportHeight\r\n","const getViewportWidth = () => {\r\n  return Math.max(document.documentElement.clientWidth, window.innerWidth)\r\n}\r\n\r\nexport default getViewportWidth\r\n","import isElement from './utils/types/isElement'\r\nimport isFunction from './utils/types/isFunction'\r\nimport isString from './utils/types/isString'\r\nimport matches from './matches'\r\n\r\nconst isMatched = (el, filter) => {\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (isFunction(filter)) {\r\n    return filter(el)\r\n  } else if (isString(filter)) {\r\n    return matches(el, filter)\r\n  }\r\n}\r\n\r\nexport default isMatched\r\n","import getSiblings from './getSiblings'\r\n\r\nconst siblings = (el, includeSelf = false) => {\r\n  return getSiblings(el, includeSelf)\r\n}\r\n\r\nexport default siblings\r\n","import createElement from '../createElement'\r\nimport clone from '../clone'\r\nimport closest from '../closest'\r\nimport contains from '../contains'\r\nimport byClass from '../byClass'\r\nimport byId from '../byId'\r\nimport getHostOrParent from '../getHostOrParent'\r\nimport getOffsetParent from '../getOffsetParent'\r\nimport getScrollParent from '../getScrollParent'\r\nimport index from '../index'\r\nimport isAncestor from '../isAncestor'\r\nimport isInViewport from '../isInViewport'\r\nimport isMatched from '../isMatched'\r\nimport matches from '../matches'\r\nimport parent from '../parent'\r\nimport children from '../children'\r\n\r\nconst DOM = {\r\n  createElement,\r\n  clone,\r\n  closest,\r\n  contains,\r\n  byClass,\r\n  byId,\r\n  getHostOrParent,\r\n  getOffsetParent,\r\n  getScrollParent,\r\n  index,\r\n  isAncestor,\r\n  isInViewport,\r\n  isMatched,\r\n  matches,\r\n  parent,\r\n  children\r\n}\r\n\r\nexport default DOM\r\n","import isElement from './utils/types/isElement'\r\n\r\n/**\r\n * 克隆节点\r\n * ========================================================================\r\n * @method clone\r\n * @see https://developer.mozilla.org/zh-CN/docs/Web/API/Node/cloneNode\r\n * @param {HTMLElement|Text|HTMLFrameElement} el\r\n * @param {Boolean} deep - 受否深度拷贝（默认值：false）。\r\n *                         false - 仅拷贝 DOM 本身；\r\n *                         true - 拷贝 DOM 以及所有子节点；\r\n * @return {ActiveX.IXMLDOMNode|Node|null}\r\n */\r\nconst clone = (el, deep = false) => {\r\n  if (!isElement(el)) {\r\n    return null\r\n  }\r\n\r\n  return el.cloneNode(deep)\r\n}\r\n\r\nexport default clone\r\n","import matches from './matches'\nimport getHostOrParent from './getHostOrParent'\n\n/**\n * 获取 base 元素父元素最近的包含 selector 选择器的元素\n * ========================================================================\n * @method closest\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）DOM 元素的选择其\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\n */\nconst closest = (el, selector, ctx, includeCTX) => {\n  const context = ctx || document\n\n  if (!el) {\n    return null\n  }\n\n  do {\n    /* istanbul ignore else */\n    if (\n      (selector != null &&\n        (selector.startsWith('>')\n          ? el.parentNode === context && matches(el, selector)\n          : matches(el, selector))) ||\n      (includeCTX && el === context)\n    ) {\n      return el\n    }\n\n    /* istanbul ignore else */\n    if (el === context) {\n      break\n    }\n\n    /* jshint boss:true */\n  } while ((el = getHostOrParent(el)))\n}\n\nexport default closest\n","import isElement from './utils/types/isElement'\r\nimport isString from './utils/types/isString'\r\nimport isAncestor from './isAncestor'\r\n\r\nconst contains = (ancestor, descendent) => {\r\n  if (!isElement(ancestor)) {\r\n    return false\r\n  }\r\n\r\n  if (isElement(descendent)) {\r\n    return isAncestor(ancestor, descendent)\r\n  } else if (isString(descendent)) {\r\n    return !!ancestor.querySelector(descendent)\r\n  }\r\n}\r\n\r\nexport default contains\r\n","import isElement from './utils/types/isElement'\r\n\r\nconst byClass = (className, el) => {\r\n  const selector = className.replace(/^./i, '')\r\n  const $el = isElement(el) ? el : document\r\n  return $el.querySelectorAll(`.${selector}`)\r\n}\r\n\r\nexport default byClass\r\n","import isElement from './utils/types/isElement'\r\n\r\nconst byId = (id, el) => {\r\n  const selector = id.replace(/^#/i, '')\r\n  const $el = isElement(el) ? el : document\r\n  return $el.querySelector(`#${selector}`)\r\n}\r\n\r\nexport default byId\r\n","import isElement from './utils/types/isElement'\r\nimport isString from './utils/types/isString'\r\nimport isArray from './utils/types/isArray'\r\nimport getSiblings from './getSiblings'\r\n\r\nconst index = function (ancestor, descendent) {\r\n  const indexOf = (list, el) => {\r\n    let index = -1\r\n\r\n    if (!isArray(list)) {\r\n      return index\r\n    }\r\n\r\n    list.forEach((item, i) => {\r\n      if (item === el) {\r\n        index = i\r\n      }\r\n    })\r\n\r\n    return index\r\n  }\r\n\r\n  let i = -1\r\n  let list\r\n\r\n  if (!descendent) {\r\n    if (isString(el)) {\r\n      list = [...document.querySelectorAll(ancestor)]\r\n      i = indexOf(list, document.querySelector(ancestor))\r\n    } else if (isElement(ancestor)) {\r\n      list = getSiblings(ancestor, true)\r\n      i = indexOf(list, ancestor)\r\n    }\r\n  } else {\r\n    list = getSiblings(ancestor, true)\r\n    i = indexOf(list, ancestor)\r\n  }\r\n\r\n  return i\r\n}\r\n\r\nexport default index\r\n","import getViewportHeight from './getViewportHeight'\r\nimport getViewportWidth from './getViewportWidth'\r\n\r\nconst isInViewport = (el) => {\r\n  const rect = el.getBoundingClientRect()\r\n  const vh = getViewportHeight()\r\n  const vw = getViewportWidth()\r\n\r\n  return (\r\n    rect.top >= 0 && rect.left >= 0 && rect.bottom <= vh && rect.right <= vw\r\n  )\r\n}\r\n\r\nexport default isInViewport\r\n","import isElement from './utils/types/isElement'\r\nimport isTextNode from './utils/types/isTextNode'\r\nimport getOffsetParent from './getOffsetParent'\r\nimport getScrollParent from './getScrollParent'\r\nimport getHostOrParent from './getHostOrParent'\r\n\r\nconst parent = (el, type) => {\r\n  let $parent = null\r\n\r\n  if (!isElement(el) && !isTextNode(el)) {\r\n    return $parent\r\n  }\r\n\r\n  switch (type) {\r\n    case 'offset':\r\n      $parent = getOffsetParent(el)\r\n      break\r\n    case 'scroll':\r\n      $parent = getScrollParent(el)\r\n      break\r\n    default:\r\n      $parent = getHostOrParent(el)\r\n      break\r\n  }\r\n\r\n  return $parent\r\n}\r\n\r\nexport default parent\r\n","import siblings from './siblings'\r\n\r\nconst children = (el) => {\r\n  return siblings(el.firstChild)\r\n}\r\n\r\nexport default children\r\n","import isElement from './utils/types/isElement'\r\n\r\nconst insertBefore = (el, reference) => {\r\n  const $parent = reference.parentNode\r\n\r\n  if (\r\n    !el ||\r\n    !isElement(el) ||\r\n    !reference ||\r\n    !isElement(reference) ||\r\n    !$parent\r\n  ) {\r\n    return null\r\n  }\r\n\r\n  return $parent.insertBefore(el, reference)\r\n}\r\n\r\nexport default insertBefore\r\n","import isElement from './utils/types/isElement'\r\nimport getNextSibling from './getNextSibling'\r\n\r\nconst insertAfter = (el, reference) => {\r\n  const $parent = reference.parentNode\r\n  let $nextSibling\r\n\r\n  if (\r\n    !el ||\r\n    !isElement(el) ||\r\n    !reference ||\r\n    !isElement(reference) ||\r\n    !$parent\r\n  ) {\r\n    return null\r\n  }\r\n\r\n  $nextSibling = getNextSibling(reference)\r\n\r\n  if ($nextSibling) {\r\n    return $parent.insertBefore(el, $nextSibling)\r\n  } else {\r\n    return $parent.appendChild(el)\r\n  }\r\n}\r\n\r\nexport default insertAfter\r\n","import isElement from './utils/types/isElement'\r\n\r\n/**\r\n * 在指定元素的末尾插入HTML字符串。\r\n * ========================================================================\r\n * @param {HTMLElement|String} el\r\n * @param {String} html\r\n *\r\n * @example\r\n * insertAfter(document.getElementById('myId'), '<p>after</p>');\r\n * // <div id=\"myId\">...</div> <p>after</p>\r\n */\r\nconst insertHTMLAfter = (el, html) => {\r\n  let $el\r\n\r\n  if (!el || !html) {\r\n    return false\r\n  }\r\n\r\n  $el = isElement(el) ? el : document.querySelector(el)\r\n\r\n  if (!$el) {\r\n    return false\r\n  }\r\n\r\n  $el.insertAdjacentHTML('afterend', html)\r\n}\r\n\r\nexport default insertHTMLAfter\r\n","import isElement from './utils/types/isElement'\r\n\r\n/**\r\n * 在指定元素的开头插入HTML字符串。\r\n * ========================================================================\r\n * @param {HTMLElement|String} el\r\n * @param {String} html\r\n *\r\n * @example\r\n * insertHTMLBefore(document.getElementById('myId'), '<p>before</p>');\r\n * // <p>before</p> <div id=\"myId\">...</div>\r\n */\r\nconst insertHTMLBefore = (el, html) => {\r\n  let $el\r\n\r\n  if (!el || !html) {\r\n    return false\r\n  }\r\n\r\n  $el = isElement(el) ? el : document.querySelector(el)\r\n\r\n  if (!$el) {\r\n    return false\r\n  }\r\n\r\n  $el.insertAdjacentHTML('beforebegin', html)\r\n}\r\n\r\nexport default insertHTMLBefore\r\n","import append from '../append'\r\nimport prepend from '../prepend'\r\nimport after from '../after'\r\nimport before from '../before'\r\nimport insertAfter from '../insertAfter'\r\nimport insertBefore from '../insertBefore'\r\nimport insertHTMLAfter from '../insertHTMLAfter'\r\nimport insertHTMLBefore from '../insertHTMLBefore'\r\n\r\nconst DOM = {\r\n  insertAfter,\r\n  insertBefore,\r\n  insertHTMLAfter,\r\n  insertHTMLBefore,\r\n  append,\r\n  prepend,\r\n  after,\r\n  before\r\n}\r\n\r\nexport default DOM\r\n","import isElement from './utils/types/isElement'\r\nimport isTextNode from './utils/types/isTextNode'\r\nimport isFragment from './utils/types/isFragment'\r\n\r\nconst append = (el, reference) => {\r\n  if (\r\n    (!isElement(el) && !isTextNode(el) && !isFragment(el)) ||\r\n    isElement(reference)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  reference.appendChild(el)\r\n}\r\n\r\nexport default append\r\n","import isElement from './utils/types/isElement'\r\nimport isTextNode from './utils/types/isTextNode'\r\nimport isFragment from './utils/types/isFragment'\r\nimport insertBefore from './insertBefore'\r\n\r\nconst prepend = (el, reference) => {\r\n  let $firstChild\r\n\r\n  if (\r\n    (!isElement(el) && !isTextNode(el) && !isFragment(el)) ||\r\n    isElement(reference)\r\n  ) {\r\n    return false\r\n  }\r\n\r\n  $firstChild = reference.firstChild\r\n  insertBefore(el, $firstChild)\r\n}\r\n\r\nexport default prepend\r\n","import isElement from './utils/types/isElement'\r\nimport isHTML from './utils/types/isHTML'\r\nimport insertAfter from './insertAfter'\r\nimport insertHTMLAfter from './insertHTMLAfter'\r\n\r\nconst after = (el, reference) => {\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (isElement(reference)) {\r\n    insertAfter(el, reference)\r\n  } else if (isHTML(reference)) {\r\n    insertHTMLAfter(el, reference)\r\n  }\r\n}\r\n\r\nexport default after\r\n","import isElement from './utils/types/isElement'\r\nimport insertBefore from './insertBefore'\r\nimport isHTML from './utils/types/isHTML'\r\nimport insertHTMLBefore from './insertHTMLBefore'\r\n\r\nconst before = (el, reference) => {\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (isElement(reference)) {\r\n    insertBefore(el, reference)\r\n  } else if (isHTML(reference)) {\r\n    insertHTMLBefore(el, reference)\r\n  }\r\n}\r\n\r\nexport default before\r\n","/**\n * 获取 DOM 节点相对于窗口的 left（横坐标）值\n * ========================================================================\n * @method getOffsetLeft\n * @param {HTMLElement} el - DOM 节点\n * @returns {Number}\n */\nconst getOffsetLeft = (el) => {\n  let left = el.offsetLeft\n\n  if (el.offsetParent !== null) {\n    left += getOffsetLeft(el.offsetParent)\n  }\n\n  return left\n}\n\nexport default getOffsetLeft\n","/**\n * 获取 DOM 节点相对于窗口的 left （纵坐标）值\n * ========================================================================\n * @method getOffsetTop\n * @param {HTMLElement} el - DOM 节点\n * @returns {Number}\n */\nconst getOffsetTop = (el) => {\n  let top = el.offsetTop\n\n  if (el.offsetParent !== null) {\n    top += getOffsetTop(el.offsetParent)\n  }\n\n  return top\n}\n\nexport default getOffsetTop\n","import isElement from './utils/types/isElement'\nimport getOffsetLeft from './getOffsetLeft'\nimport getOffsetTop from './getOffsetTop'\n\n/**\n * 获取 DOM 节点相对于窗口的 left 和 top 值\n * ========================================================================\n * @method getOffset\n * @param {HTMLElement} el - DOM 节点\n * @returns {{top: Number, left: Number, width: (*|number|number), height: number}|null}\n */\nconst getOffset = (el) => {\n  let top\n  let left\n  let width\n  let height\n\n  if (!isElement(el)) {\n    return null\n  }\n\n  top = getOffsetTop(el)\n  left = getOffsetLeft(el)\n  width = el.offsetWidth\n  height = el.offsetHeight\n\n  return {\n    width,\n    height,\n    top,\n    left\n  }\n}\n\nexport default getOffset\n","const getDocumentScrollLeft = (doc) => {\r\n  const $document = doc || document\r\n  return Math.max(\r\n    $document.documentElement.scrollLeft,\r\n    $document.body.scrollLeft\r\n  )\r\n}\r\n\r\nexport default getDocumentScrollLeft\r\n","import isElement from './utils/types/isElement'\r\nimport getDocumentScrollLeft from './getDocumentScrollLeft'\r\n\r\nconst getPageX = (el) => {\r\n  const floor = Math.floor\r\n  let scrollLeft\r\n  let box\r\n  let doc\r\n  let pageX\r\n\r\n  if (!isElement(el)) {\r\n    return 0\r\n  }\r\n\r\n  box = el.getBoundingClientRect()\r\n  doc = el.ownerDocument\r\n  scrollLeft = getDocumentScrollLeft(doc)\r\n\r\n  pageX = floor(box.left)\r\n\r\n  if (scrollLeft) {\r\n    pageX += scrollLeft\r\n  }\r\n\r\n  return pageX\r\n}\r\n\r\nexport default getPageX\r\n","const getDocumentScrollTop = (doc) => {\r\n  const $document = doc || document\r\n  return Math.max($document.documentElement.scrollTop, $document.body.scrollTop)\r\n}\r\n\r\nexport default getDocumentScrollTop\r\n","import isElement from './utils/types/isElement'\r\nimport getDocumentScrollTop from './getDocumentScrollTop'\r\n\r\nconst getPageY = (el) => {\r\n  const floor = Math.floor\r\n  let scrollTop\r\n  let box\r\n  let doc\r\n  let pageY\r\n\r\n  if (!isElement(el)) {\r\n    return 0\r\n  }\r\n\r\n  box = el.getBoundingClientRect()\r\n  doc = el.ownerDocument\r\n  scrollTop = getDocumentScrollTop(doc)\r\n\r\n  pageY = floor(box.left)\r\n\r\n  if (scrollTop) {\r\n    pageY += scrollTop\r\n  }\r\n\r\n  return pageY\r\n}\r\n\r\nexport default getPageY\r\n","const getScrollLeft = (el = window) => {\r\n  return el.scrollX !== undefined ? el.scrollX : el.scrollLeft\r\n}\r\n\r\nexport default getScrollLeft\r\n","const getScrollTop = (el = window) => {\r\n  return el.scrollY !== undefined ? el.scrollY : el.scrollTop\r\n}\r\n\r\nexport default getScrollTop\r\n","import isElement from './utils/types/isElement'\r\nimport getScrollLeft from './getScrollLeft'\r\nimport getStyle from './getStyle'\r\n\r\n/**\r\n * 获取某个节点所有父节点的滚动位置\r\n * ====================================================\r\n * @method getScrollTotalLeft\r\n */\r\nconst getScrollTotalLeft = (() => {\r\n  const $root = window\r\n  let scrollX = []\r\n\r\n  return (el) => {\r\n    let $parent\r\n\r\n    if (!isElement(el)) {\r\n      return scrollX\r\n    }\r\n\r\n    $parent = el.parentNode\r\n\r\n    if (!$parent) {\r\n      return scrollX\r\n    }\r\n\r\n    if ($parent === $root.document) {\r\n      const $body = document.body || document.documentElement\r\n      const position = getScrollLeft($body)\r\n      const x = [...scrollX]\r\n\r\n      x.push(position.x)\r\n\r\n      scrollX = []\r\n\r\n      return x\r\n    }\r\n\r\n    if (\r\n      ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow')) !== -1 ||\r\n      ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow-x')) !== -1\r\n    ) {\r\n      const position = getScrollLeft($parent)\r\n\r\n      scrollX.push(position.x)\r\n    }\r\n\r\n    return getScrollTotalLeft($parent)\r\n  }\r\n})()\r\n\r\nexport default getScrollTotalLeft\r\n","import isElement from './utils/types/isElement'\r\nimport getScrollTop from './getScrollTop'\r\nimport getStyle from './getStyle'\r\n\r\n/**\r\n * 获取某个节点所有父节点的滚动位置\r\n * ====================================================\r\n * @method getScrollTotalTop\r\n */\r\nconst getScrollTotalTop = (() => {\r\n  const $root = window\r\n  let scrollY = []\r\n\r\n  return (el) => {\r\n    let $parent\r\n\r\n    if (!isElement(el)) {\r\n      return scrollY\r\n    }\r\n\r\n    $parent = el.parentNode\r\n\r\n    if (!$parent) {\r\n      return scrollY\r\n    }\r\n\r\n    if ($parent === $root.document) {\r\n      const $body = document.body || document.documentElement\r\n      const position = getScrollTop($body)\r\n      const y = [...scrollY]\r\n\r\n      y.push(position.y)\r\n\r\n      scrollY = []\r\n\r\n      return y\r\n    }\r\n\r\n    if (\r\n      ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow')) !== -1 ||\r\n      ['scroll', 'auto'].indexOf(getStyle($parent, 'overflow-y')) !== -1\r\n    ) {\r\n      const position = getScrollTop($parent)\r\n\r\n      scrollY.push(position.y)\r\n    }\r\n\r\n    return getScrollTotalTop($parent)\r\n  }\r\n})()\r\n\r\nexport default getScrollTotalTop\r\n","/**\n * 返回给定值的平方值\n * ========================================================================\n * @method easeInQuad\n * @param {Number} x\n * @returns {number}\n */\nconst easeInQuad = (x) => {\n  return x * x\n}\n\nexport default easeInQuad\n","import isElement from './utils/types/isElement'\r\nimport getOffset from './getOffset'\r\n\r\nconst offset = (el) => {\r\n  if (isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  return getOffset(el)\r\n}\r\n\r\nexport default offset\r\n","/**\n * 检测数据是否为 Number 类型\n * ========================================================================\n * @method isNumber\n * @param {*} o\n * @returns {boolean}\n */\nconst isNumber = (o) => {\n  return typeof o === 'number'\n}\n\nexport default isNumber\n","import toCamel from './utils/string/toCamel'\r\nimport isElement from './utils/types/isElement'\r\n\r\nconst setStyle = (el, attr, val) => {\r\n  let prop\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  prop = toCamel(attr)\r\n\r\n  if (prop === 'float') {\r\n    prop = 'cssFloat'\r\n  }\r\n\r\n  el.style[prop] = val\r\n}\r\n\r\nexport default setStyle\r\n","import getDocumentHeight from '../getDocumentHeight'\r\nimport getDocumentWidth from '../getDocumentWidth'\r\nimport getViewportHeight from '../getViewportHeight'\r\nimport getViewportWidth from '../getViewportWidth'\r\nimport innerHeight from '../innerHeight'\r\nimport innerWidth from '../innerWidth'\r\nimport outerHeight from '../outerHeight'\r\nimport outerWidth from '../outerWidth'\r\nimport height from '../height'\r\nimport width from '../width'\r\n\r\nconst DOM = {\r\n  getDocumentHeight,\r\n  getDocumentWidth,\r\n  getViewportHeight,\r\n  getViewportWidth,\r\n  innerHeight,\r\n  innerWidth,\r\n  outerHeight,\r\n  outerWidth,\r\n  height,\r\n  width\r\n}\r\n\r\nexport default DOM\r\n","import getViewportHeight from './getViewportHeight'\r\n\r\nconst getDocumentHeight = () => {\r\n  const scrollHeight =\r\n    document.documentElement.scrollHeight || document.body.scrollHeight\r\n  return Math.max(scrollHeight, getViewportHeight())\r\n}\r\n\r\nexport default getDocumentHeight\r\n","import getViewportWidth from './getViewportWidth'\r\n\r\nconst getDocumentWidth = () => {\r\n  const scrollWidth =\r\n    document.documentElement.scrollWidth || document.body.scrollWidth\r\n  return Math.max(scrollWidth, getViewportWidth())\r\n}\r\n\r\nexport default getDocumentWidth\r\n","const innerHeight = (el) => {\r\n  let height = 0\r\n\r\n  return height\r\n}\r\n\r\nexport default innerHeight\r\n","const innerWidth = (el) => {\r\n  let width = 0\r\n\r\n  return width\r\n}\r\n\r\nexport default innerWidth\r\n","const outerHeight = (el) => {\r\n  let height = 0\r\n\r\n  return height\r\n}\r\n\r\nexport default outerHeight\r\n","const outerWidth = (el) => {\r\n  let width = 0\r\n\r\n  return width\r\n}\r\n\r\nexport default outerWidth\r\n","import isElement from './utils/types/isElement'\r\nimport isNumber from './utils/types/isNumber'\r\nimport setStyle from './setStyle'\r\nimport offset from './offset'\r\n\r\nconst height = (el, val) => {\r\n  let value\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (typeof val === 'undefined') {\r\n    return offset(el).height\r\n  } else {\r\n    if (isNumber(val)) {\r\n      value = `${val}px`\r\n    } else {\r\n      value = `${val.replace(/\\D/gi, '')}px`\r\n    }\r\n    setStyle(el, 'height', value)\r\n  }\r\n}\r\n\r\nexport default height\r\n","import isElement from './utils/types/isElement'\r\nimport isNumber from './utils/types/isNumber'\r\nimport setStyle from './setStyle'\r\nimport offset from './offset'\r\n\r\nconst width = (el, val) => {\r\n  let value\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (typeof val === 'undefined') {\r\n    return offset(el).width\r\n  } else {\r\n    if (isNumber(val)) {\r\n      value = `${val}px`\r\n    } else {\r\n      value = `${val.replace(/\\D/gi, '')}px`\r\n    }\r\n    setStyle(el, 'width', value)\r\n  }\r\n}\r\n\r\nexport default width\r\n","import isElement from './utils/types/isElement'\r\nimport isString from './utils/types/isString'\r\nimport isObject from './utils/types/isObject'\r\nimport extend from './utils/lang/extend'\r\n\r\n/**\r\n * 给元素添加样式\r\n * ====================================================\r\n * @param {HTMLElement} el\r\n * @param {Object|String} styles\r\n * @returns {any}\r\n */\r\nconst setStyles = (el, styles) => {\r\n  let rules = ''\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (el.style.cssText) {\r\n    if (isObject(styles)) {\r\n      Object.keys(styles).forEach((prop) => {\r\n        const val = styles[prop]\r\n        rules += `${prop}:${val};`\r\n      })\r\n    } else if (isString(styles)) {\r\n      rules = styles\r\n    }\r\n\r\n    el.style.cssText += rules\r\n  } else {\r\n    if (isObject(styles)) {\r\n      extend(el.style, styles)\r\n    }\r\n  }\r\n}\r\n\r\nexport default setStyles\r\n","import hasOwn from './hasOwn'\n\n/**\n * 扩展对象\n * ========================================================================\n * @method extend\n * @param {Object} origin\n * @param {Object} source\n */\nconst extend = (origin, source) => {\n  const keys = Object.keys(source)\n\n  keys.forEach((prop) => {\n    if (hasOwn(source, prop)) {\n      origin[prop] = source[prop]\n    }\n  })\n}\n\nexport default extend\n","const getProperty = (prop) => {\r\n  const documentElement = document.documentElement\r\n  documentElement.style.getPropertyValue(prop)\r\n}\r\n\r\nexport default getProperty\r\n","const setProperty = (prop, value) => {\r\n  const documentElement = document.documentElement\r\n  documentElement.style.setProperty(prop, value)\r\n}\r\n\r\nexport default setProperty\r\n","import getStyle from '../getStyle'\r\nimport setStyle from '../setStyle'\r\nimport getStyles from '../getStyles'\r\nimport setStyles from '../setStyles'\r\nimport getProperty from '../getProperty'\r\nimport setProperty from '../setProperty'\r\nimport css from '../css'\r\nimport prop from '../prop'\r\n\r\nconst DOM = {\r\n  getStyle,\r\n  setStyle,\r\n  getStyles,\r\n  setStyles,\r\n  getProperty,\r\n  setProperty,\r\n  css,\r\n  prop\r\n}\r\n\r\nexport default DOM\r\n","import toCamel from './utils/string/toCamel'\r\nimport isElement from './utils/types/isElement'\r\n\r\n/**\r\n * 获取HTML元素的某个CSS样式值\r\n * ====================================================\r\n * @param el\r\n * @param attrs\r\n * @returns {*}\r\n */\r\nconst getStyles = (el, attrs) => {\r\n  const styles = {}\r\n  let props = null\r\n\r\n  if (!isElement(el)) {\r\n    return props\r\n  }\r\n\r\n  props = getComputedStyle(el)\r\n\r\n  attrs.forEach((attr) => {\r\n    const prop = toCamel(attr)\r\n    const value = props[prop]\r\n\r\n    if (typeof value !== 'undefined') {\r\n      styles[prop] = value\r\n    }\r\n  })\r\n\r\n  return styles\r\n}\r\n\r\nexport default getStyles\r\n","import isElement from './utils/types/isElement'\r\nimport isString from './utils/types/isString'\r\nimport setStyle from './setStyle'\r\nimport getStyle from './getStyle'\r\nimport isObject from './utils/types/isObject'\r\nimport setStyles from './setStyles'\r\n\r\nconst css = (el, attr, value) => {\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  if (isString(attr)) {\r\n    if (typeof value !== 'undefined') {\r\n      setStyle(el, attr, value)\r\n    } else {\r\n      getStyle(el, attr)\r\n    }\r\n  } else if (isObject(attr)) {\r\n    setStyles(el, attr)\r\n  }\r\n}\r\n\r\nexport default css\r\n","import getProperty from './getProperty'\r\nimport setProperty from './setProperty'\r\n\r\nconst prop = (prop, value) => {\r\n  if (typeof value !== 'undefined') {\r\n    return setProperty(prop, value)\r\n  } else {\r\n    return getProperty(prop)\r\n  }\r\n}\r\n\r\nexport default prop\r\n","import Attributes from './attributes'\r\nimport Base from './base'\r\nimport Insertion from './insertion'\r\nimport Position from './position'\r\nimport Sibling from './sibling'\r\nimport Size from './size'\r\nimport Style from './style'\r\nimport Types from './types'\r\n\r\nconst DOM = {\r\n  ...Attributes,\r\n  ...Base,\r\n  ...Insertion,\r\n  ...Position,\r\n  ...Sibling,\r\n  ...Size,\r\n  ...Style,\r\n  ...Types\r\n}\r\n\r\nexport default DOM\r\n","import getOffset from '../getOffset'\r\nimport getOffsetLeft from '../getOffsetLeft'\r\nimport getOffsetTop from '../getOffsetTop'\r\nimport getPageXY from '../getPageXY'\r\nimport getPageX from '../getPageX'\r\nimport getPageY from '../getPageY'\r\nimport getDocumentScrollLeft from '../getDocumentScrollLeft'\r\nimport getDocumentScrollTop from '../getDocumentScrollTop'\r\nimport getScroll from '../getScroll'\r\nimport getScrollLeft from '../getScrollLeft'\r\nimport getScrollTop from '../getScrollTop'\r\nimport getScrollTotal from '../getScrollTotal'\r\nimport getScrollTotalLeft from '../getScrollTotalLeft'\r\nimport getScrollTotalTop from '../getScrollTotalTop'\r\nimport scrollTo from '../scrollTo'\r\nimport offset from '../offset'\r\n\r\nconst DOM = {\r\n  getOffset,\r\n  getOffsetLeft,\r\n  getOffsetTop,\r\n  getPageXY,\r\n  getPageX,\r\n  getPageY,\r\n  getDocumentScrollLeft,\r\n  getDocumentScrollTop,\r\n  getScroll,\r\n  getScrollLeft,\r\n  getScrollTop,\r\n  getScrollTotal,\r\n  getScrollTotalLeft,\r\n  getScrollTotalTop,\r\n  scrollTo,\r\n  offset\r\n}\r\n\r\nexport default DOM\r\n","import isElement from './utils/types/isElement'\r\nimport getPageX from './getPageX'\r\nimport getPageY from './getPageY'\r\n\r\nconst getPageXY = (el) => {\r\n  if (!isElement(el)) {\r\n    return null\r\n  }\r\n\r\n  return {\r\n    x: getPageY(el),\r\n    y: getPageX(el)\r\n  }\r\n}\r\n\r\nexport default getPageXY\r\n","import getScrollLeft from './getScrollLeft'\r\nimport getScrollTop from './getScrollTop'\r\n\r\nconst getScroll = (el = window) => {\r\n  return {\r\n    top: getScrollTop(el),\r\n    left: getScrollLeft(el)\r\n  }\r\n}\r\n\r\nexport default getScroll\r\n","import getScrollTotalLeft from './getScrollTotalLeft'\r\nimport getScrollTotalTop from './getScrollTotalTop'\r\n\r\nconst getScrollTotal = (el) => {\r\n  return {\r\n    top: getScrollTotalTop(el),\r\n    left: getScrollTotalLeft(el)\r\n  }\r\n}\r\n\r\nexport default getScrollTotal\r\n","import easeInQuad from './utils/lang/easeInQuad'\nimport isFunction from './utils/types/isFunction'\nimport isElement from './utils/types/isElement'\n\n/**\n * 指定 DOM 节点滚动到指定 top 位置\n * ========================================================================\n * @method scrollTo\n * @param {HTMLElement|String} el - （必须）要滚动的 DOM 节点\n * @param {Number} top - （必须）滚动的 scrollTop 数值\n * @param {Function} [afterStop] - （可选）滚动完成的回调函数\n */\nconst scrollTo = (el, top, afterStop) => {\n  const $el = isElement(el) ? el : document.querySelector(el)\n  let scrollTop = $el.scrollTop\n  let step = 0\n  const distance = top - scrollTop\n  const MAX_HEIGHT = $el.scrollHeight\n  const MAX_TOP = top - MAX_HEIGHT <= 0 ? top : MAX_HEIGHT\n  const stop = (top) => {\n    if (isFunction(afterStop)) {\n      afterStop(top)\n    }\n\n    return false\n  }\n  const play = () => {\n    step += 1\n\n    // 向上滚动\n    if (distance < 0) {\n      scrollTop -= easeInQuad(step)\n      $el.scrollTop = scrollTop\n\n      if (scrollTop <= top) {\n        $el.scrollTop = top\n        return stop(top)\n      }\n    } else {\n      scrollTop += easeInQuad(step)\n      $el.scrollTop = scrollTop\n\n      if (scrollTop >= MAX_TOP) {\n        $el.scrollTop = MAX_TOP\n        return stop(MAX_TOP)\n      }\n    }\n\n    requestAnimationFrame(play)\n  }\n\n  requestAnimationFrame(play)\n}\n\nexport default scrollTo\n","import getNextSibling from '../getNextSibling'\r\nimport getPreviousSibling from '../getPreviousSibling'\r\nimport getNextSiblings from '../getNextSiblings'\r\nimport getPreviousSiblings from '../getPreviousSiblings'\r\nimport getNextSiblingBy from '../getNextSiblingBy'\r\nimport getPreviousSiblingBy from '../getPreviousSiblingBy'\r\nimport getSiblings from '../getSiblings'\r\nimport next from '../next'\r\nimport prev from '../prev'\r\nimport nextAll from '../nextAll'\r\nimport prevAll from '../prevAll'\r\nimport siblings from '../siblings'\r\n\r\nconst DOM = {\r\n  getNextSibling,\r\n  getPreviousSibling,\r\n  getNextSiblings,\r\n  getPreviousSiblings,\r\n  getNextSiblingBy,\r\n  getPreviousSiblingBy,\r\n  getSiblings,\r\n  next,\r\n  prev,\r\n  nextAll,\r\n  prevAll,\r\n  siblings\r\n}\r\n\r\nexport default DOM\r\n","import isElement from './utils/types/isElement'\r\nimport isMatched from './isMatched'\r\nimport getNextSibling from './getNextSibling'\r\n\r\nconst getNextSiblingBy = (el, filter) => {\r\n  let $el = isElement(el) ? el : null\r\n\r\n  while ($el) {\r\n    $el = getNextSibling($el)\r\n\r\n    if (isMatched($el, filter)) {\r\n      return $el\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default getNextSiblingBy\r\n","import isElement from './utils/types/isElement'\r\nimport isMatched from './isMatched'\r\nimport getPreviousSibling from './getPreviousSibling'\r\n\r\nconst getPreviousSiblingBy = (el, filter) => {\r\n  let $el = isElement(el) ? el : null\r\n\r\n  while ($el) {\r\n    $el = getPreviousSibling($el)\r\n\r\n    if (isMatched($el, filter)) {\r\n      return $el\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default getPreviousSiblingBy\r\n","import getNextSibling from './getNextSibling'\r\n\r\nconst next = (el) => {\r\n  return getNextSibling(el)\r\n}\r\n\r\nexport default next\r\n","import getPreviousSibling from './getPreviousSibling'\r\n\r\nconst prev = (el) => {\r\n  return getPreviousSibling(el)\r\n}\r\n\r\nexport default prev\r\n","import getNextSiblings from './getNextSiblings'\r\n\r\nconst nextAll = (el) => {\r\n  return getNextSiblings(el)\r\n}\r\n\r\nexport default nextAll\r\n","import getPreviousSiblings from './getPreviousSiblings'\r\n\r\nconst prevAll = (el) => {\r\n  return getPreviousSiblings(el)\r\n}\r\n\r\nexport default prevAll\r\n","import isCollection from '../isCollection'\r\nimport isDOM from '../isDOM'\r\nimport isElement from '../isElement'\r\nimport isFragment from '../isFragment'\r\nimport isText from '../isText'\r\n\r\nconst DOM = {\r\n  isCollection,\r\n  isDOM,\r\n  isElement,\r\n  isFragment,\r\n  isText\r\n}\r\n\r\nexport default DOM\r\n","import isHTMLCollection from './utils/types/isHTMLCollection'\r\n\r\nconst isCollection = (el) => {\r\n  return isHTMLCollection(el)\r\n}\r\n\r\nexport default isCollection\r\n","import isTextNode from './utils/types/isTextNode'\r\n\r\nconst isText = (el) => {\r\n  return isTextNode(el)\r\n}\r\n\r\nexport default isText\r\n"],"names":["toString","val","Object","prototype","apply","isFunction","isObject","o","isElement","nodeName","tagName","nodeType","isString","str","isArray","Array","setAttribute","el","attr","value","toLowerCase","className","style","cssText","hasOwn","obj","prop","hasOwnProperty","call","setAttributes","attrs","keys","forEach","getAttribute","getAttributes","props","length","getAttributeNames","key","removeAttribute","hasClass","pattern","RegExp","allClass","classList","contains","exec","addClass","add","trim","replace","removeClass","remove","TAGS","isHTML","html","basic","full","slice","map","tag","join","test","isHTMLCollection","isFragment","fragment","isTextNode","isDOM","createElement","children","$fragment","document","createDocumentFragment","$el","isValidChild","child","append","$child","createTextNode","appendChild","every","DOM","removeAttributes","replaceClass","oldCls","newCls","toggleClass","toggle","strHTML","innerHTML","childNodes","text","innerText","matches","selector","sel","msMatchesSelector","getHostOrParent","host","parentNode","isAncestor","ancestor","descendent","result","compareDocumentPosition","getOffsetParent","offsetParent","toCamel","indexOf","x","l","toUpperCase","getStyle","getComputedStyle","getScrollParent","$root","window","$parent","body","scrollTop","scrollLeft","documentElement","getPreviousSibling","previousElementSibling","getPreviousSiblings","prev","$sibling","push","getNextSibling","nextElementSibling","getNextSiblings","next","getSiblings","includeSelf","list","getViewportHeight","Math","max","clientHeight","innerHeight","getViewportWidth","clientWidth","innerWidth","isMatched","filter","siblings","clone","deep","cloneNode","closest","ctx","includeCTX","context","startsWith","querySelector","byClass","querySelectorAll","byId","id","index","item","i","isInViewport","rect","getBoundingClientRect","vh","vw","top","left","bottom","right","parent","type","firstChild","insertBefore","reference","insertAfter","$nextSibling","insertHTMLAfter","insertAdjacentHTML","insertHTMLBefore","prepend","$firstChild","after","before","getOffsetLeft","offsetLeft","getOffsetTop","offsetTop","getOffset","width","height","offsetWidth","offsetHeight","getDocumentScrollLeft","doc","$document","getPageX","floor","box","pageX","ownerDocument","getDocumentScrollTop","getPageY","pageY","getScrollLeft","undefined","scrollX","getScrollTop","scrollY","getScrollTotalLeft","$body","position","getScrollTotalTop","y","easeInQuad","offset","isNumber","setStyle","getDocumentHeight","scrollHeight","getDocumentWidth","scrollWidth","outerHeight","outerWidth","setStyles","styles","rules","origin","source","getProperty","getPropertyValue","setProperty","getStyles","css","Attributes","Base","Insertion","getPageXY","getScroll","getScrollTotal","scrollTo","afterStop","step","distance","MAX_HEIGHT","MAX_TOP","stop","play","requestAnimationFrame","getNextSiblingBy","getPreviousSiblingBy","nextAll","prevAll","Size","Style","isCollection","isText"],"mappings":"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I/BuB,EAAY3B,EAAG2B,eAEXA,GAAWQ,OACbR,EAAUQ,OAAO/B,IAEjBsB,EAAWM,EAAKN,EAASO,QAAQ7B,EAAW,KAC5CJ,EAAGI,UAAYsB,KAChB,EChCGU,EAAO,CACX,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,OACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,KACA,MACA,OACA,IACA,OACA,SACA,SACA,UACA,SACA,OACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,OCzGIC,EAAUzC,IACd,IAAI0C,EACAC,EACAC,EAEJ,QAAK7C,EAASC,KAKd0C,EAAON,EAAKpC,GAAK6C,MAAM,EAAG,KAC1BF,EAAQ,4DACRC,EAAO,IAAIf,OAAOW,EAAKM,KAAKC,GAAQ,IAAIA,eAAgBC,KAAK,KAAM,KAE5DL,EAAMM,KAAKP,IAASE,EAAKK,KAAKP,GAAI,ECzBrCQ,EAAoB9C,MACdX,EAASW,IAAwB,sBAAjBjB,EAASiB,ICD/B+C,EAAcC,MAEhB3D,EAAS2D,IAAoC,8BAAvBjE,EAASiE,ICF7BC,EAAcjD,MAEhBX,EAASW,MACS,kBAAjBjB,EAASiB,IAA4BA,EAAGP,SAA2B,IAAhBO,EAAGN,WCArDwD,EAASlD,MAEXX,EAASW,MACRT,EAAUS,IAAO8C,EAAiB9C,IAAO+C,EAAW/C,IAAOiD,EAAWjD,KCMrEmD,E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"}